[
  {
    "question": "How does the workflow use and access variables, context objects, outputs from previous jobs, and secrets?",
    "answer": "# Workflow to demonstrate variables and context objects\n\nname: Variables and Context\n\n# Controls when the action will run. Workflow runs when manually triggered using the UI or API\non:\n  workflow_dispatch:\n    # Inputs the workflow accepts.\n    inputs:\n      name:\n        # Friendly description to be shown in the UI instead of 'name'\n        description: 'Person to greet'\n        # Default value if no value is explicitly provided\n        default: 'World'\n        # Input has to be provided for the workflow to run\n        required: true\n\nenv:\n  VAR1: myworkflowvar1\n  VAR2: myworkflowvar2\n  VAR3: myworkflowvar3\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n\n  job1:\n    runs-on: ubuntu-latest \n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n      - name: Dump GitHub context\n        env:\n          GITHUB_CONTEXT: ${{ toJSON(github) }}\n        run: echo \"$GITHUB_CONTEXT\"\n      \n  #step/job output variables\n  job2:\n    runs-on: ubuntu-latest\n    \n    outputs:\n      output1: ${{ steps.step1.outputs.step1value }}\n      output2: ${{ steps.step2.outputs.step2value }}\n    \n    steps:\n      - name: Step 1\n        id: step1\n        # run: echo \"::set-output name=step1value::hello\"\n        run: echo \"step1value=hello\" >> $GITHUB_OUTPUT\n\n      - name: Step 2\n        id: step2\n        # run: echo \"::set-output name=step2value::world\"\n        run: echo \"step2value=world\" >> $GITHUB_OUTPUT\n  \n  job3:\n    runs-on: ubuntu-latest\n    needs: job2\n    steps:\n      - run: echo ${{needs.job2.outputs.output1}} ${{needs.job2.outputs.output2}}\n\n  # access/set env and secrets \n  job4:\n    runs-on: ubuntu-latest\n    env:\n      VAR2: myjobvar2\n      VAR3: myjobvar3\n      SECRET: ${{ secrets.mySecret }}\n    steps:\n\n      - run: |\n          echo $VAR1\n          echo ${{env.VAR1}}\n\n          echo \"\"\n\n          echo $VAR2\n\n          echo $VAR3\n\n          echo $SECRET\n        env: \n          VAR3: mystepvar3\n",
    "source": "nampereira/desofs-tp04",
    "path": ".github/workflows/2-context.yaml",
    "url": "https://github.com/nampereira/desofs-tp04/blob/a901b8f0160c924cc14bc6013b432e8bed448453/.github/workflows/2-context.yaml",
    "retrieved_at": "2025-08-14T12:24:45.141505Z"
  },
  {
    "question": "How does the workflow ensure cache consistency across different Dart SDK versions and packages?",
    "answer": "# Created with package:mono_repo v6.6.3\nname: Dart CI\non:\n  push:\n    branches:\n      - main\n      - master\n  pull_request:\n  schedule:\n    - cron: \"0 0 * * 0\"\ndefaults:\n  run:\n    shell: bash\nenv:\n  PUB_ENVIRONMENT: bot.github\npermissions: read-all\n\njobs:\n  job_001:\n    name: mono_repo self validate\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:stable\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: stable\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - name: mono_repo self validate\n        run: dart pub global activate mono_repo 6.6.3\n      - name: mono_repo self validate\n        run: dart pub global run mono_repo generate --validate\n  job_002:\n    name: \"smoke_test; PKGS: app, pkg/_pub_shared, pkg/api_builder, pkg/fake_gcloud, pkg/pub_package_reader, pkg/web_app, pkg/web_css; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos  .`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app-pkg/_pub_shared-pkg/api_builder-pkg/fake_gcloud-pkg/pub_package_reader-pkg/web_app-pkg/web_css;commands:format-analyze_0\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app-pkg/_pub_shared-pkg/api_builder-pkg/fake_gcloud-pkg/pub_package_reader-pkg/web_app-pkg/web_css\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - id: pkg__pub_shared_pub_get\n        name: pkg/_pub_shared; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/_pub_shared\n      - name: \"pkg/_pub_shared; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg__pub_shared_pub_get.conclusion == 'success'\"\n        working-directory: pkg/_pub_shared\n      - name: \"pkg/_pub_shared; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.pkg__pub_shared_pub_get.conclusion == 'success'\"\n        working-directory: pkg/_pub_shared\n      - id: pkg_api_builder_pub_get\n        name: pkg/api_builder; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/api_builder\n      - name: \"pkg/api_builder; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_api_builder_pub_get.conclusion == 'success'\"\n        working-directory: pkg/api_builder\n      - name: \"pkg/api_builder; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.pkg_api_builder_pub_get.conclusion == 'success'\"\n        working-directory: pkg/api_builder\n      - id: pkg_fake_gcloud_pub_get\n        name: pkg/fake_gcloud; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/fake_gcloud\n      - name: \"pkg/fake_gcloud; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_fake_gcloud_pub_get.conclusion == 'success'\"\n        working-directory: pkg/fake_gcloud\n      - name: \"pkg/fake_gcloud; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.pkg_fake_gcloud_pub_get.conclusion == 'success'\"\n        working-directory: pkg/fake_gcloud\n      - id: pkg_pub_package_reader_pub_get\n        name: pkg/pub_package_reader; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_package_reader\n      - name: \"pkg/pub_package_reader; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_pub_package_reader_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_package_reader\n      - name: \"pkg/pub_package_reader; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.pkg_pub_package_reader_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_package_reader\n      - id: pkg_web_app_pub_get\n        name: pkg/web_app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/web_app\n      - name: \"pkg/web_app; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_web_app_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_app\n      - name: \"pkg/web_app; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.pkg_web_app_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_app\n      - id: pkg_web_css_pub_get\n        name: pkg/web_css; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/web_css\n      - name: \"pkg/web_css; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_web_css_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_css\n      - name: \"pkg/web_css; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.pkg_web_css_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_css\n  job_003:\n    name: \"smoke_test; PKG: pkg/indexed_blob; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos .`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/indexed_blob;commands:format-analyze_1\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/indexed_blob\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_indexed_blob_pub_get\n        name: pkg/indexed_blob; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/indexed_blob\n      - name: \"pkg/indexed_blob; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_indexed_blob_pub_get.conclusion == 'success'\"\n        working-directory: pkg/indexed_blob\n      - name: \"pkg/indexed_blob; dart analyze --fatal-infos .\"\n        run: dart analyze --fatal-infos .\n        if: \"always() && steps.pkg_indexed_blob_pub_get.conclusion == 'success'\"\n        working-directory: pkg/indexed_blob\n  job_004:\n    name: \"smoke_test; PKG: pkg/pub_integration; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos lib/`, `dart analyze --fatal-infos test/`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration;commands:format-analyze_2-analyze_3\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_integration_pub_get\n        name: pkg/pub_integration; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart analyze --fatal-infos lib/\"\n        run: dart analyze --fatal-infos lib/\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart analyze --fatal-infos test/\"\n        run: dart analyze --fatal-infos test/\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n  job_005:\n    name: \"smoke_test; PKG: pkg/pub_worker; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos --fatal-warnings bin/ lib/`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker;commands:format-analyze_4\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_worker_pub_get\n        name: pkg/pub_worker; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n      - name: \"pkg/pub_worker; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_pub_worker_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n      - name: \"pkg/pub_worker; dart analyze --fatal-infos --fatal-warnings bin/ lib/\"\n        run: dart analyze --fatal-infos --fatal-warnings bin/ lib/\n        if: \"always() && steps.pkg_pub_worker_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n  job_006:\n    name: \"build; PKG: pkg/web_app; `./build.sh`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_app;commands:command_1\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_web_app_pub_get\n        name: pkg/web_app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/web_app\n      - name: pkg/web_app; ./build.sh\n        run: ./build.sh\n        if: \"always() && steps.pkg_web_app_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n  job_007:\n    name: \"build; PKG: pkg/web_css; `./build.sh`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_css;commands:command_1\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_css\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_web_css_pub_get\n        name: pkg/web_css; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/web_css\n      - name: pkg/web_css; ./build.sh\n        run: ./build.sh\n        if: \"always() && steps.pkg_web_css_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_css\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n  job_008:\n    name: \"build_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P build-only -j 1`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_00\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P build-only -j 1\"\n        run: dart test -P build-only -j 1\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n  job_009:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 0`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_01\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 0\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 0\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_010:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 1`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_02\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 1\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 1\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_011:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 2`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_03\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 2\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 2\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_012:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 3`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_04\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 3\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 3\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_013:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 4`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_05\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 4\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 4\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_014:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 5`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_06\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 5\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 5\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_015:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 6`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_07\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 6\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 6\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_016:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 7`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_08\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 7\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 7\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_017:\n    name: \"unit_test; PKG: pkg/_pub_shared; `dart test --run-skipped`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/_pub_shared;commands:test_09\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/_pub_shared\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg__pub_shared_pub_get\n        name: pkg/_pub_shared; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/_pub_shared\n      - name: \"pkg/_pub_shared; dart test --run-skipped\"\n        run: dart test --run-skipped\n        if: \"always() && steps.pkg__pub_shared_pub_get.conclusion == 'success'\"\n        working-directory: pkg/_pub_shared\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_018:\n    name: \"unit_test; PKG: pkg/fake_gcloud; `dart test --run-skipped`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/fake_gcloud;commands:test_09\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/fake_gcloud\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_fake_gcloud_pub_get\n        name: pkg/fake_gcloud; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/fake_gcloud\n      - name: \"pkg/fake_gcloud; dart test --run-skipped\"\n        run: dart test --run-skipped\n        if: \"always() && steps.pkg_fake_gcloud_pub_get.conclusion == 'success'\"\n        working-directory: pkg/fake_gcloud\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_019:\n    name: \"unit_test; PKG: pkg/indexed_blob; `dart test --run-skipped`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/indexed_blob;commands:test_09\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/indexed_blob\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_indexed_blob_pub_get\n        name: pkg/indexed_blob; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/indexed_blob\n      - name: \"pkg/indexed_blob; dart test --run-skipped\"\n        run: dart test --run-skipped\n        if: \"always() && steps.pkg_indexed_blob_pub_get.conclusion == 'success'\"\n        working-directory: pkg/indexed_blob\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_020:\n    name: \"unit_test; PKG: pkg/pub_package_reader; `dart test --run-skipped`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_package_reader;commands:test_09\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_package_reader\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_package_reader_pub_get\n        name: pkg/pub_package_reader; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_package_reader\n      - name: \"pkg/pub_package_reader; dart test --run-skipped\"\n        run: dart test --run-skipped\n        if: \"always() && steps.pkg_pub_package_reader_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_package_reader\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_021:\n    name: \"unit_test; PKG: pkg/web_app; `dart test --run-skipped`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_app;commands:test_09\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_web_app_pub_get\n        name: pkg/web_app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/web_app\n      - name: \"pkg/web_app; dart test --run-skipped\"\n        run: dart test --run-skipped\n        if: \"always() && steps.pkg_web_app_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_022:\n    name: \"unit_test; PKG: pkg/web_css; `dart test --run-skipped`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_css;commands:test_09\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_css\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_web_css_pub_get\n        name: pkg/web_css; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/web_css\n      - name: \"pkg/web_css; dart test --run-skipped\"\n        run: dart test --run-skipped\n        if: \"always() && steps.pkg_web_css_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_css\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_023:\n    name: \"unit_test; PKG: pkg/pub_integration; `dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '0~4p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration;commands:test_10\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_integration_pub_get\n        name: pkg/pub_integration; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '0~4p'`\"\n        run: \"dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '0~4p'`\"\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_024:\n    name: \"unit_test; PKG: pkg/pub_integration; `dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '1~4p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration;commands:test_11\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_integration_pub_get\n        name: pkg/pub_integration; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '1~4p'`\"\n        run: \"dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '1~4p'`\"\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_025:\n    name: \"unit_test; PKG: pkg/pub_integration; `dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '2~4p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration;commands:test_12\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_integration_pub_get\n        name: pkg/pub_integration; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '2~4p'`\"\n        run: \"dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '2~4p'`\"\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_026:\n    name: \"unit_test; PKG: pkg/pub_integration; `dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '3~4p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration;commands:test_13\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_integration_pub_get\n        name: pkg/pub_integration; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '3~4p'`\"\n        run: \"dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '3~4p'`\"\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_027:\n    name: \"unit_test; PKG: pkg/pub_worker; `dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '0~3p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker;commands:test_14\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_worker_pub_get\n        name: pkg/pub_worker; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n      - name: \"pkg/pub_worker; dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '0~3p'`\"\n        run: \"dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '0~3p'`\"\n        if: \"always() && steps.pkg_pub_worker_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_028:\n    name: \"unit_test; PKG: pkg/pub_worker; `dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '1~3p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker;commands:test_15\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_worker_pub_get\n        name: pkg/pub_worker; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n      - name: \"pkg/pub_worker; dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '1~3p'`\"\n        run: \"dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '1~3p'`\"\n        if: \"always() && steps.pkg_pub_worker_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_029:\n    name: \"unit_test; PKG: pkg/pub_worker; `dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '2~3p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker;commands:test_16\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_worker_pub_get\n        name: pkg/pub_worker; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n      - name: \"pkg/pub_worker; dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '2~3p'`\"\n        run: \"dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '2~3p'`\"\n        if: \"always() && steps.pkg_pub_worker_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n",
    "source": "dart-lang/pub-dev",
    "path": ".github/workflows/dart.yml",
    "url": "https://github.com/dart-lang/pub-dev/blob/59af9a05fb70e699e7caa325d43f60649a3f431a/.github/workflows/dart.yml",
    "retrieved_at": "2025-08-14T12:24:50.273229Z"
  },
  {
    "question": "What i18n-related checks are performed by this workflow on push and pull requests to the main branch?",
    "answer": "name: Check i18n\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\nenv:\n  RAILS_ENV: test\n\njobs:\n  check-i18n:\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v2\n    - name: Install system dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libicu-dev libidn11-dev libprotobuf-dev protobuf-compiler\n    - name: Set up Ruby\n      uses: ruby/setup-ruby@v1\n      with:\n        ruby-version: '2.7'\n        bundler-cache: true\n    - name: Check locale file normalization\n      run: bundle exec i18n-tasks check-normalized\n    - name: Check for unused strings\n      run: bundle exec i18n-tasks unused -l en\n    - name: Check for wrong string interpolations\n      run: bundle exec i18n-tasks check-consistent-interpolations\n    - name: Check that all required locale files exist\n      run: bundle exec rake repo:check_locales_files\n",
    "source": "magicstone-dev/ecko",
    "path": ".github/workflows/check-i18n.yml",
    "url": "https://github.com/magicstone-dev/ecko/blob/a11982ed5341fb447ac3f65543488a014aa319d5/.github/workflows/check-i18n.yml",
    "retrieved_at": "2025-08-14T12:24:51.039771Z"
  },
  {
    "question": "What specific end-to-end tests are executed by this workflow?",
    "answer": "# Runs randomly generated E2E testnets nightly on the v0.37.x branch.\n\n# !! This file should be kept in sync with the e2e-nightly-main.yml file,\n# modulo changes to the version labels.\n\nname: e2e-nightly-37x\non:\n  schedule:\n    - cron: '0 2 * * *'\n\njobs:\n  e2e-nightly-test:\n    # Run parallel jobs for the listed testnet groups (must match the\n    # ./build/generator -g flag)\n    strategy:\n      fail-fast: false\n      matrix:\n        group: ['00', '01', '02', '03', \"04\"]\n    runs-on: ubuntu-latest\n    timeout-minutes: 60\n    steps:\n      - uses: actions/setup-go@v4\n        with:\n          go-version: '1.20'\n\n      - uses: actions/checkout@v3\n        with:\n          ref: 'v0.37.x'\n\n      - name: Capture git repo info\n        id: git-info\n        run: |\n          echo \"branch=`git branch --show-current`\" >> $GITHUB_OUTPUT\n\n      - name: Build\n        working-directory: test/e2e\n        # Run make jobs in parallel, since we can't run steps in parallel.\n        run: make -j2 docker generator runner tests\n\n      - name: Generate testnets\n        working-directory: test/e2e\n        # When changing -g, also change the matrix groups above\n        run: ./build/generator -g 5 -d networks/nightly/ -p\n\n      - name: Run ${{ matrix.p2p }} p2p testnets\n        working-directory: test/e2e\n        run: ./run-multiple.sh networks/nightly/*-group${{ matrix.group }}-*.toml\n\n    outputs:\n      git-branch: ${{ steps.git-info.outputs.branch }}\n\n  e2e-nightly-fail:\n    needs: e2e-nightly-test\n    if: ${{ failure() }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Notify Slack on failure\n        uses: slackapi/slack-github-action@v1.24.0\n        env:\n          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}\n          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK\n          BRANCH: ${{ needs.e2e-nightly-test.outputs.git-branch }}\n          RUN_URL: \"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"\n          COMMITS_URL: \"${{ github.server_url }}/${{ github.repository }}/commits/${{ needs.e2e-nightly-test.outputs.git-branch }}\"\n        with:\n          payload: |\n            {\n              \"blocks\": [\n                {\n                  \"type\": \"section\",\n                  \"text\": {\n                    \"type\": \"mrkdwn\",\n                    \"text\": \":skull: Nightly E2E tests for `${{ env.BRANCH }}` failed. See the <${{ env.RUN_URL }}|run details> and the <${{ env.COMMITS_URL }}|latest commits> possibly related to the failure.\"\n                  }\n                }\n              ]\n            }\n",
    "source": "bnb-chain/greenfield-cometbft",
    "path": ".github/workflows/e2e-nightly-37x.yml",
    "url": "https://github.com/bnb-chain/greenfield-cometbft/blob/1d6ca8f26cf781b5e2f0b09c6b1daf5b20c66751/.github/workflows/e2e-nightly-37x.yml",
    "retrieved_at": "2025-08-14T12:24:51.947805Z"
  },
  {
    "question": "Under what condition is the distribution artifact uploaded in this workflow?",
    "answer": "# This workflow will build a Java project with Gradle\n# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle\n\nname: Java CI\n\non: [ push, pull_request ]\n\njobs:\n  build:\n\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        env:\n          # see https://www.jetbrains.com/idea/download/previous.html\n          # and https://www.jetbrains.com/intellij-repository/snapshots/\n          - IDEA_VERSION: IC-2022.2.5\n          - IDEA_VERSION: IC-2022.3.1\n          - IDEA_VERSION: IC-2023.2.2\n          - IDEA_VERSION: IU-LATEST-EAP-SNAPSHOT\n\n    steps:\n      - uses: actions/checkout@v2\n      - name: Set up JDK 17\n        uses: actions/setup-java@v1\n        with:\n          java-version: 17\n      - name: Build with Gradle\n        run: |\n          ./gradlew -PideaVersion=${IDEA_VERSION} buildPlugin\n          echo \"DIST_FILE=$(find build/distributions/ -name 'jetbrains-plugin-st4-*.zip' -exec basename {} .zip \\;)\" >> $GITHUB_ENV\n        env: ${{ matrix.env }}\n      - name: Archive distribution artifact\n        uses: actions/upload-artifact@v2\n        with:\n          name: ${{env.DIST_FILE}}\n          path: build/distributions/jetbrains-plugin-st4-*.zip\n        if: matrix.env.IDEA_VERSION == 'IC-2022.2.5'\n",
    "source": "antlr/jetbrains-plugin-st4",
    "path": ".github/workflows/gradle.yml",
    "url": "https://github.com/antlr/jetbrains-plugin-st4/blob/1f8246e9d47f13c1e052ddd27232e8d4afaf67d9/.github/workflows/gradle.yml",
    "retrieved_at": "2025-08-14T12:24:53.834344Z"
  },
  {
    "question": "Does this workflow check if the code in a pull request branch is correctly formatted according to scalafmt, comparing it to the `origin/main` branch?",
    "answer": "name: Scalafmt\n\npermissions: read-all\n\non:\n  pull_request:\n    branches: ['**']\n\njobs:\n  build:\n    name: Code is formatted\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout current branch (full)\n        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2\n        with:\n          fetch-depth: 0\n          fetch-tags: true\n          persist-credentials: false\n\n      - name: Check project is formatted\n        uses: jrouly/scalafmt-native-action@v4\n        with:\n          arguments: '--list --mode diff-ref=origin/main'\n",
    "source": "apache/pekko-persistence-dynamodb",
    "path": ".github/workflows/format.yml",
    "url": "https://github.com/apache/pekko-persistence-dynamodb/blob/f88b6b9b20b4d5cec7285a5f049da220998f2dcb/.github/workflows/format.yml",
    "retrieved_at": "2025-08-14T12:24:55.489823Z"
  },
  {
    "question": "What different configurations are tested for KLEE on Linux, based on the matrix strategy?",
    "answer": "name: CI\n\non:\n  pull_request:\n    branches: master\n  push:\n    branches: master\n\n# Defaults for building KLEE\nenv:\n  BASE_IMAGE: ubuntu:bionic-20200807\n  REPOSITORY: klee\n  COVERAGE: 0\n  DISABLE_ASSERTIONS: 0\n  ENABLE_DOXYGEN: 0\n  ENABLE_OPTIMIZED: 1\n  ENABLE_DEBUG: 1\n  GTEST_VERSION: 1.7.0\n  KLEE_RUNTIME_BUILD: \"Debug+Asserts\"\n  LLVM_VERSION: 9\n  METASMT_VERSION: qf_abv\n  MINISAT_VERSION: \"master\"\n  REQUIRES_RTTI: 0\n  SANITIZER_BUILD:\n  SOLVERS: STP:Z3\n  STP_VERSION: 2.3.3\n  TCMALLOC_VERSION: 2.7\n  UCLIBC_VERSION: klee_uclibc_v1.2\n  USE_TCMALLOC: 1\n  USE_LIBCXX: 1\n  Z3_VERSION: 4.8.4\n\njobs:\n  Linux:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        name: [\n                \"LLVM 11\",\n                \"LLVM 10\",\n                \"LLVM 9\",\n                \"LLVM 8\",\n                \"LLVM 7\",\n                \"LLVM 6\",\n                \"LLVM 5\",\n                \"LLVM 4\",\n                \"LLVM 3.9\",\n                \"LLVM 3.8\",\n                \"ASan\",\n                \"UBSan\",\n                \"MSan\",\n                \"Z3 only\",\n                \"metaSMT STP\",\n                \"metaSMT Boolector\",\n                \"STP master\",\n                \"Latest klee-uclibc\",\n                \"Asserts enabled\",\n                \"No TCMalloc, optimised runtime\",\n            ]\n        include:\n          - name: \"LLVM 11\"\n            env:\n              LLVM_VERSION: 11\n          - name: \"LLVM 10\"\n            env:\n              LLVM_VERSION: 10\n          - name: \"LLVM 9\"\n            env:\n              LLVM_VERSION: 9\n          - name: \"LLVM 8\"\n            env:\n              LLVM_VERSION: 8\n          - name: \"LLVM 7\"\n            env:\n              LLVM_VERSION: 7\n          - name: \"LLVM 6\"\n            env:\n              LLVM_VERSION: 6\n          - name: \"LLVM 5\"\n            env:\n              LLVM_VERSION: 5\n          - name: \"LLVM 4\"\n            env:\n              LLVM_VERSION: 4\n          - name: \"LLVM 3.9\"\n            env:\n              LLVM_VERSION: 3.9\n          - name: \"LLVM 3.8\"\n            env:\n              LLVM_VERSION: 3.8\n              USE_LIBCXX: 0\n          # Sanitizer builds. Do unoptimized build otherwise the optimizer might remove problematic code\n          - name: \"ASan\"\n            env:\n              SANITIZER_BUILD: address\n              ENABLE_OPTIMIZED: 0\n              USE_TCMALLOC: 0\n          - name: \"UBSan\"\n            env:\n              SANITIZER_BUILD: undefined\n              ENABLE_OPTIMIZED: 0\n              USE_TCMALLOC: 0\n          - name: \"MSan\"\n            env:\n              SANITIZER_BUILD: memory\n              ENABLE_OPTIMIZED: 0\n              USE_TCMALLOC: 0\n              SOLVERS: STP\n            # Test just using Z3 only\n          - name: \"Z3 only\"\n            env:\n              SOLVERS: Z3\n          # Test just using metaSMT\n          - name: \"metaSMT STP\"\n            env:\n              SOLVERS: metaSMT\n              METASMT_DEFAULT: STP\n              REQUIRES_RTTI: 1\n          - name: \"metaSMT Boolector\"\n            env:\n              SOLVERS: metaSMT\n              METASMT_DEFAULT: BTOR\n              REQUIRES_RTTI: 1\n          # Test we can build against STP master\n          - name: \"STP master\"\n            env:\n              SOLVERS: STP\n              STP_VERSION: master\n          # Check we can build latest klee-uclibc branch\n          - name: \"Latest klee-uclibc\"\n            env:\n              UCLIBC_VERSION: klee_0_9_29\n          # Check at least one build with Asserts disabled.\n          - name: \"Asserts enabled\"\n            env:\n              SOLVERS: STP\n              DISABLE_ASSERTIONS: 1\n          # Check without TCMALLOC and with an optimised runtime library\n          - name: \"No TCMalloc, optimised runtime\"\n            env:\n              USE_TCMALLOC: 0\n              KLEE_RUNTIME_BUILD: \"Release+Debug+Asserts\"\n    steps:\n      - name: Checkout KLEE source code\n        uses: actions/checkout@v2\n      - name: Build KLEE\n        env: ${{ matrix.env }}\n        run: scripts/build/build.sh klee --docker --create-final-image\n      - name: Run tests\n        run: scripts/build/run-tests.sh --run-docker --debug\n\n  macOS:\n    runs-on: macos-latest\n    env:\n      BASE: /tmp\n      SOLVERS: STP\n      UCLIBC_VERSION: 0\n      USE_TCMALLOC: 0\n      USE_LIBCXX: 0\n    steps:\n      - name: Install newer version of Bash\n        run: brew install bash\n      - name: Checkout KLEE source code\n        uses: actions/checkout@v2\n      - name: Build KLEE\n        run: scripts/build/build.sh klee --debug --install-system-deps\n      - name: Run tests\n        run: scripts/build/run-tests.sh /tmp/klee_build* --debug\n\n  Docker:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout KLEE Code\n        uses: actions/checkout@v2\n      - name: Build Docker image\n        run: docker build .\n\n  Coverage:\n    runs-on: ubuntu-latest\n    env:\n      ENABLE_OPTIMIZED: 0\n      COVERAGE: 1\n    steps:\n      - name: Checkout KLEE source code\n        uses: actions/checkout@v2\n      - name: Build KLEE\n        run: scripts/build/build.sh klee --docker --create-final-image\n      - name: Run tests\n        run: scripts/build/run-tests.sh --coverage --upload-coverage --run-docker --debug\n",
    "source": "COMSYS/SymbolicLivenessAnalysis",
    "path": ".github/workflows/build.yaml",
    "url": "https://github.com/COMSYS/SymbolicLivenessAnalysis/blob/69af518cdb6cc4323f2a639e0a15a265552e9df5/.github/workflows/build.yaml",
    "retrieved_at": "2025-08-14T12:24:56.586759Z"
  },
  {
    "question": "Under what conditions does the workflow publish the created NuGet package to NuGet.org?",
    "answer": "name: .NET Core\non:\n  push:\n  workflow_dispatch:\n  release:\n    types: [published]\n\nenv:\n  DEFAULT_VERSION: \"3.1.0.4-alpha\"\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Setup .NET Core 2.2\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: 2.2.x\n      - name: Setup .NET Core 3.1\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: 3.1.x\n      - name: Setup .NET 6\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: 6.0.x\n      - name: Setup .NET 8\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: 8.0.x\n      - name: Build with dotnet\n        run: dotnet build --configuration Release /p:ContinuousIntegrationBuild=true\n      - name: Test\n        run: dotnet test src/PostalCodes.UnitTests/PostalCodes.UnitTests.csproj\n      - name: Extract Version from Release Tag\n        id: get_version\n        run: echo \"VERSION=$(echo '${{ github.event.release.tag_name || env.DEFAULT_VERSION }}' | sed -e 's/^v//')\" >> $GITHUB_ENV\n      - name: Create nuget package\n        run: dotnet pack . -p:PackageVersion=${{ env.VERSION }} -o out --no-build\n      - name: Install dotnet-validate\n        run: dotnet tool install --global dotnet-validate --version 0.0.1-preview.304\n\n      - name: Validate NuGet package\n        run: dotnet-validate package local out/*.nupkg\n\n      - name: Publish\n        if: github.event_name == 'release'\n        run: |\n          dotnet nuget push out/PostalCodes.${{ env.VERSION }}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json\n",
    "source": "Cimpress-MCP/PostalCodes.Net",
    "path": ".github/workflows/dotnetcore.yml",
    "url": "https://github.com/Cimpress-MCP/PostalCodes.Net/blob/1dea354096b5858e6584b8d233db1a88456a02f3/.github/workflows/dotnetcore.yml",
    "retrieved_at": "2025-08-14T12:24:57.771476Z"
  },
  {
    "question": "What specific tests are executed by the `npm test` command in this workflow?",
    "answer": "name: Tests\n\non: [push, pull_request]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@master\n      - name: Use Node.js 12.x\n        uses: actions/setup-node@v1\n        with:\n          node-version: 12.x\n      - name: npm install and test\n        run: |\n          npm install\n          npm test\n",
    "source": "nervetattoo/banner-card",
    "path": ".github/workflows/nodejs.yml",
    "url": "https://github.com/nervetattoo/banner-card/blob/554c77c4fca5019896d336492b81b1fc56f9a281/.github/workflows/nodejs.yml",
    "retrieved_at": "2025-08-14T12:24:58.621683Z"
  },
  {
    "question": "How does the `metadata2gha` command in the `setup_matrix` job determine the test matrix configurations?",
    "answer": "name: CI\n\non: pull_request\n\njobs:\n  setup_matrix:\n    name: 'Setup Test Matrix'\n    runs-on: ubuntu-latest\n    outputs:\n      beaker_setfiles: ${{ steps.get-outputs.outputs.beaker_setfiles }}\n      puppet_major_versions: ${{ steps.get-outputs.outputs.puppet_major_versions }}\n      puppet_unit_test_matrix: ${{ steps.get-outputs.outputs.puppet_unit_test_matrix }}\n    env:\n      BUNDLE_WITHOUT: development:test:release\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup ruby\n        uses: ruby/setup-ruby@v1\n        with:\n          ruby-version: '2.7'\n          bundler-cache: true\n      - name: Run rake validate\n        run: bundle exec rake validate\n      - name: Setup Test Matrix\n        id: get-outputs\n        run: bundle exec metadata2gha --use-fqdn --pidfile-workaround false\n\n  unit:\n    needs: setup_matrix\n    runs-on: ubuntu-latest\n    strategy:\n      fail-fast: false\n      matrix:\n        include: ${{fromJson(needs.setup_matrix.outputs.puppet_unit_test_matrix)}}\n    env:\n      BUNDLE_WITHOUT: development:system_tests:release\n      PUPPET_VERSION: \"~> ${{ matrix.puppet }}.0\"\n    name: Puppet ${{ matrix.puppet }} (Ruby ${{ matrix.ruby }})\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup ruby\n        uses: ruby/setup-ruby@v1\n        with:\n          ruby-version: ${{ matrix.ruby }}\n          bundler-cache: true\n      - name: Run tests\n        run: bundle exec rake\n\n  acceptance:\n    needs: setup_matrix\n    runs-on: ubuntu-latest\n    env:\n      BUNDLE_WITHOUT: development:test:release\n    strategy:\n      fail-fast: false\n      matrix:\n        setfile: ${{fromJson(needs.setup_matrix.outputs.beaker_setfiles)}}\n        puppet: ${{fromJson(needs.setup_matrix.outputs.puppet_major_versions)}}\n    name: ${{ matrix.puppet.name }} - ${{ matrix.setfile.name }}\n    steps:\n      - name: Enable IPv6 on docker\n        run: |\n          echo '{\"ipv6\":true,\"fixed-cidr-v6\":\"2001:db8:1::/64\"}' | sudo tee /etc/docker/daemon.json\n          sudo service docker restart\n      - uses: actions/checkout@v2\n      - name: Setup ruby\n        uses: ruby/setup-ruby@v1\n        with:\n          ruby-version: '2.7'\n          bundler-cache: true\n      - name: Run tests\n        run: bundle exec rake beaker\n        env:\n          BEAKER_PUPPET_COLLECTION: ${{ matrix.puppet.collection }}\n          BEAKER_setfile: ${{ matrix.setfile.value }}\n",
    "source": "scibian/puppet-module-puppet-archive",
    "path": ".github/workflows/ci.yml",
    "url": "https://github.com/scibian/puppet-module-puppet-archive/blob/56ac175624cd57ebd4245348165ea97895f5fd1c/.github/workflows/ci.yml",
    "retrieved_at": "2025-08-14T12:24:59.444331Z"
  }
]