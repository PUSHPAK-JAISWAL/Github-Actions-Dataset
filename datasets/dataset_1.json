[
  {
    "question": "How does the workflow use and access variables, context objects, outputs from previous jobs, and secrets?",
    "answer": "# Workflow to demonstrate variables and context objects\n\nname: Variables and Context\n\n# Controls when the action will run. Workflow runs when manually triggered using the UI or API\non:\n  workflow_dispatch:\n    # Inputs the workflow accepts.\n    inputs:\n      name:\n        # Friendly description to be shown in the UI instead of 'name'\n        description: 'Person to greet'\n        # Default value if no value is explicitly provided\n        default: 'World'\n        # Input has to be provided for the workflow to run\n        required: true\n\nenv:\n  VAR1: myworkflowvar1\n  VAR2: myworkflowvar2\n  VAR3: myworkflowvar3\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n\n  job1:\n    runs-on: ubuntu-latest \n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n      - name: Dump GitHub context\n        env:\n          GITHUB_CONTEXT: ${{ toJSON(github) }}\n        run: echo \"$GITHUB_CONTEXT\"\n      \n  #step/job output variables\n  job2:\n    runs-on: ubuntu-latest\n    \n    outputs:\n      output1: ${{ steps.step1.outputs.step1value }}\n      output2: ${{ steps.step2.outputs.step2value }}\n    \n    steps:\n      - name: Step 1\n        id: step1\n        # run: echo \"::set-output name=step1value::hello\"\n        run: echo \"step1value=hello\" >> $GITHUB_OUTPUT\n\n      - name: Step 2\n        id: step2\n        # run: echo \"::set-output name=step2value::world\"\n        run: echo \"step2value=world\" >> $GITHUB_OUTPUT\n  \n  job3:\n    runs-on: ubuntu-latest\n    needs: job2\n    steps:\n      - run: echo ${{needs.job2.outputs.output1}} ${{needs.job2.outputs.output2}}\n\n  # access/set env and secrets \n  job4:\n    runs-on: ubuntu-latest\n    env:\n      VAR2: myjobvar2\n      VAR3: myjobvar3\n      SECRET: ${{ secrets.mySecret }}\n    steps:\n\n      - run: |\n          echo $VAR1\n          echo ${{env.VAR1}}\n\n          echo \"\"\n\n          echo $VAR2\n\n          echo $VAR3\n\n          echo $SECRET\n        env: \n          VAR3: mystepvar3\n",
    "source": "nampereira/desofs-tp04",
    "path": ".github/workflows/2-context.yaml",
    "url": "https://github.com/nampereira/desofs-tp04/blob/a901b8f0160c924cc14bc6013b432e8bed448453/.github/workflows/2-context.yaml",
    "retrieved_at": "2025-08-14T12:24:45.141505Z"
  },
  {
    "question": "How does the workflow ensure cache consistency across different Dart SDK versions and packages?",
    "answer": "# Created with package:mono_repo v6.6.3\nname: Dart CI\non:\n  push:\n    branches:\n      - main\n      - master\n  pull_request:\n  schedule:\n    - cron: \"0 0 * * 0\"\ndefaults:\n  run:\n    shell: bash\nenv:\n  PUB_ENVIRONMENT: bot.github\npermissions: read-all\n\njobs:\n  job_001:\n    name: mono_repo self validate\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:stable\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: stable\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - name: mono_repo self validate\n        run: dart pub global activate mono_repo 6.6.3\n      - name: mono_repo self validate\n        run: dart pub global run mono_repo generate --validate\n  job_002:\n    name: \"smoke_test; PKGS: app, pkg/_pub_shared, pkg/api_builder, pkg/fake_gcloud, pkg/pub_package_reader, pkg/web_app, pkg/web_css; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos  .`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app-pkg/_pub_shared-pkg/api_builder-pkg/fake_gcloud-pkg/pub_package_reader-pkg/web_app-pkg/web_css;commands:format-analyze_0\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app-pkg/_pub_shared-pkg/api_builder-pkg/fake_gcloud-pkg/pub_package_reader-pkg/web_app-pkg/web_css\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - id: pkg__pub_shared_pub_get\n        name: pkg/_pub_shared; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/_pub_shared\n      - name: \"pkg/_pub_shared; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg__pub_shared_pub_get.conclusion == 'success'\"\n        working-directory: pkg/_pub_shared\n      - name: \"pkg/_pub_shared; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.pkg__pub_shared_pub_get.conclusion == 'success'\"\n        working-directory: pkg/_pub_shared\n      - id: pkg_api_builder_pub_get\n        name: pkg/api_builder; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/api_builder\n      - name: \"pkg/api_builder; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_api_builder_pub_get.conclusion == 'success'\"\n        working-directory: pkg/api_builder\n      - name: \"pkg/api_builder; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.pkg_api_builder_pub_get.conclusion == 'success'\"\n        working-directory: pkg/api_builder\n      - id: pkg_fake_gcloud_pub_get\n        name: pkg/fake_gcloud; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/fake_gcloud\n      - name: \"pkg/fake_gcloud; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_fake_gcloud_pub_get.conclusion == 'success'\"\n        working-directory: pkg/fake_gcloud\n      - name: \"pkg/fake_gcloud; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.pkg_fake_gcloud_pub_get.conclusion == 'success'\"\n        working-directory: pkg/fake_gcloud\n      - id: pkg_pub_package_reader_pub_get\n        name: pkg/pub_package_reader; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_package_reader\n      - name: \"pkg/pub_package_reader; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_pub_package_reader_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_package_reader\n      - name: \"pkg/pub_package_reader; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.pkg_pub_package_reader_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_package_reader\n      - id: pkg_web_app_pub_get\n        name: pkg/web_app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/web_app\n      - name: \"pkg/web_app; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_web_app_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_app\n      - name: \"pkg/web_app; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.pkg_web_app_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_app\n      - id: pkg_web_css_pub_get\n        name: pkg/web_css; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/web_css\n      - name: \"pkg/web_css; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_web_css_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_css\n      - name: \"pkg/web_css; dart analyze --fatal-infos  .\"\n        run: dart analyze --fatal-infos  .\n        if: \"always() && steps.pkg_web_css_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_css\n  job_003:\n    name: \"smoke_test; PKG: pkg/indexed_blob; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos .`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/indexed_blob;commands:format-analyze_1\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/indexed_blob\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_indexed_blob_pub_get\n        name: pkg/indexed_blob; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/indexed_blob\n      - name: \"pkg/indexed_blob; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_indexed_blob_pub_get.conclusion == 'success'\"\n        working-directory: pkg/indexed_blob\n      - name: \"pkg/indexed_blob; dart analyze --fatal-infos .\"\n        run: dart analyze --fatal-infos .\n        if: \"always() && steps.pkg_indexed_blob_pub_get.conclusion == 'success'\"\n        working-directory: pkg/indexed_blob\n  job_004:\n    name: \"smoke_test; PKG: pkg/pub_integration; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos lib/`, `dart analyze --fatal-infos test/`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration;commands:format-analyze_2-analyze_3\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_integration_pub_get\n        name: pkg/pub_integration; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart analyze --fatal-infos lib/\"\n        run: dart analyze --fatal-infos lib/\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart analyze --fatal-infos test/\"\n        run: dart analyze --fatal-infos test/\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n  job_005:\n    name: \"smoke_test; PKG: pkg/pub_worker; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos --fatal-warnings bin/ lib/`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker;commands:format-analyze_4\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_worker_pub_get\n        name: pkg/pub_worker; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n      - name: \"pkg/pub_worker; dart format --output=none --set-exit-if-changed .\"\n        run: \"dart format --output=none --set-exit-if-changed .\"\n        if: \"always() && steps.pkg_pub_worker_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n      - name: \"pkg/pub_worker; dart analyze --fatal-infos --fatal-warnings bin/ lib/\"\n        run: dart analyze --fatal-infos --fatal-warnings bin/ lib/\n        if: \"always() && steps.pkg_pub_worker_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n  job_006:\n    name: \"build; PKG: pkg/web_app; `./build.sh`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_app;commands:command_1\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_web_app_pub_get\n        name: pkg/web_app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/web_app\n      - name: pkg/web_app; ./build.sh\n        run: ./build.sh\n        if: \"always() && steps.pkg_web_app_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n  job_007:\n    name: \"build; PKG: pkg/web_css; `./build.sh`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_css;commands:command_1\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_css\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_web_css_pub_get\n        name: pkg/web_css; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/web_css\n      - name: pkg/web_css; ./build.sh\n        run: ./build.sh\n        if: \"always() && steps.pkg_web_css_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_css\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n  job_008:\n    name: \"build_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P build-only -j 1`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_00\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P build-only -j 1\"\n        run: dart test -P build-only -j 1\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n  job_009:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 0`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_01\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 0\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 0\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_010:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 1`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_02\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 1\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 1\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_011:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 2`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_03\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 2\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 2\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_012:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 3`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_04\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 3\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 3\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_013:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 4`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_05\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 4\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 4\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_014:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 5`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_06\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 5\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 5\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_015:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 6`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_07\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 6\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 6\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_016:\n    name: \"unit_test; PKG: app; `sudo apt-get update -yq && sudo apt-get install webp`, `dart test -P presubmit --total-shards 8 --shard-index 7`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app;commands:command_0-test_08\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: app_pub_get\n        name: app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; sudo apt-get update -yq && sudo apt-get install webp\"\n        run: \"sudo apt-get update -yq && sudo apt-get install webp\"\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n      - name: \"app; dart test -P presubmit --total-shards 8 --shard-index 7\"\n        run: dart test -P presubmit --total-shards 8 --shard-index 7\n        if: \"always() && steps.app_pub_get.conclusion == 'success'\"\n        working-directory: app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_017:\n    name: \"unit_test; PKG: pkg/_pub_shared; `dart test --run-skipped`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/_pub_shared;commands:test_09\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/_pub_shared\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg__pub_shared_pub_get\n        name: pkg/_pub_shared; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/_pub_shared\n      - name: \"pkg/_pub_shared; dart test --run-skipped\"\n        run: dart test --run-skipped\n        if: \"always() && steps.pkg__pub_shared_pub_get.conclusion == 'success'\"\n        working-directory: pkg/_pub_shared\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_018:\n    name: \"unit_test; PKG: pkg/fake_gcloud; `dart test --run-skipped`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/fake_gcloud;commands:test_09\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/fake_gcloud\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_fake_gcloud_pub_get\n        name: pkg/fake_gcloud; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/fake_gcloud\n      - name: \"pkg/fake_gcloud; dart test --run-skipped\"\n        run: dart test --run-skipped\n        if: \"always() && steps.pkg_fake_gcloud_pub_get.conclusion == 'success'\"\n        working-directory: pkg/fake_gcloud\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_019:\n    name: \"unit_test; PKG: pkg/indexed_blob; `dart test --run-skipped`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/indexed_blob;commands:test_09\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/indexed_blob\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_indexed_blob_pub_get\n        name: pkg/indexed_blob; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/indexed_blob\n      - name: \"pkg/indexed_blob; dart test --run-skipped\"\n        run: dart test --run-skipped\n        if: \"always() && steps.pkg_indexed_blob_pub_get.conclusion == 'success'\"\n        working-directory: pkg/indexed_blob\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_020:\n    name: \"unit_test; PKG: pkg/pub_package_reader; `dart test --run-skipped`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_package_reader;commands:test_09\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_package_reader\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_package_reader_pub_get\n        name: pkg/pub_package_reader; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_package_reader\n      - name: \"pkg/pub_package_reader; dart test --run-skipped\"\n        run: dart test --run-skipped\n        if: \"always() && steps.pkg_pub_package_reader_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_package_reader\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_021:\n    name: \"unit_test; PKG: pkg/web_app; `dart test --run-skipped`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_app;commands:test_09\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_app\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_web_app_pub_get\n        name: pkg/web_app; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/web_app\n      - name: \"pkg/web_app; dart test --run-skipped\"\n        run: dart test --run-skipped\n        if: \"always() && steps.pkg_web_app_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_app\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_022:\n    name: \"unit_test; PKG: pkg/web_css; `dart test --run-skipped`\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_css;commands:test_09\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/web_css\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_web_css_pub_get\n        name: pkg/web_css; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/web_css\n      - name: \"pkg/web_css; dart test --run-skipped\"\n        run: dart test --run-skipped\n        if: \"always() && steps.pkg_web_css_pub_get.conclusion == 'success'\"\n        working-directory: pkg/web_css\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_023:\n    name: \"unit_test; PKG: pkg/pub_integration; `dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '0~4p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration;commands:test_10\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_integration_pub_get\n        name: pkg/pub_integration; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '0~4p'`\"\n        run: \"dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '0~4p'`\"\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_024:\n    name: \"unit_test; PKG: pkg/pub_integration; `dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '1~4p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration;commands:test_11\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_integration_pub_get\n        name: pkg/pub_integration; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '1~4p'`\"\n        run: \"dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '1~4p'`\"\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_025:\n    name: \"unit_test; PKG: pkg/pub_integration; `dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '2~4p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration;commands:test_12\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_integration_pub_get\n        name: pkg/pub_integration; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '2~4p'`\"\n        run: \"dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '2~4p'`\"\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_026:\n    name: \"unit_test; PKG: pkg/pub_integration; `dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '3~4p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration;commands:test_13\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_integration\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_integration_pub_get\n        name: pkg/pub_integration; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n      - name: \"pkg/pub_integration; dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '3~4p'`\"\n        run: \"dart test -j1 --run-skipped `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '3~4p'`\"\n        if: \"always() && steps.pkg_pub_integration_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_integration\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_027:\n    name: \"unit_test; PKG: pkg/pub_worker; `dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '0~3p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker;commands:test_14\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_worker_pub_get\n        name: pkg/pub_worker; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n      - name: \"pkg/pub_worker; dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '0~3p'`\"\n        run: \"dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '0~3p'`\"\n        if: \"always() && steps.pkg_pub_worker_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_028:\n    name: \"unit_test; PKG: pkg/pub_worker; `dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '1~3p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker;commands:test_15\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_worker_pub_get\n        name: pkg/pub_worker; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n      - name: \"pkg/pub_worker; dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '1~3p'`\"\n        run: \"dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '1~3p'`\"\n        if: \"always() && steps.pkg_pub_worker_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n  job_029:\n    name: \"unit_test; PKG: pkg/pub_worker; `dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '2~3p'``\"\n    runs-on: ubuntu-latest\n    steps:\n      - name: Cache Pub hosted dependencies\n        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf\n        with:\n          path: \"~/.pub-cache/hosted\"\n          key: \"os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker;commands:test_16\"\n          restore-keys: |\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0;packages:pkg/pub_worker\n            os:ubuntu-latest;pub-cache-hosted;sdk:3.8.0\n            os:ubuntu-latest;pub-cache-hosted\n            os:ubuntu-latest\n      - name: Setup Dart SDK\n        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c\n        with:\n          sdk: \"3.8.0\"\n      - id: checkout\n        name: Checkout repository\n        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n      - id: pkg_pub_worker_pub_get\n        name: pkg/pub_worker; dart pub get\n        run: dart pub get\n        if: \"always() && steps.checkout.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n      - name: \"pkg/pub_worker; dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '2~3p'`\"\n        run: \"dart test --run-skipped --concurrency=1 `find test -name \\\"*_test\\\\\\\\.dart\\\" | sort | sed -n '2~3p'`\"\n        if: \"always() && steps.pkg_pub_worker_pub_get.conclusion == 'success'\"\n        working-directory: pkg/pub_worker\n    needs:\n      - job_001\n      - job_002\n      - job_003\n      - job_004\n      - job_005\n      - job_006\n      - job_007\n      - job_008\n",
    "source": "dart-lang/pub-dev",
    "path": ".github/workflows/dart.yml",
    "url": "https://github.com/dart-lang/pub-dev/blob/59af9a05fb70e699e7caa325d43f60649a3f431a/.github/workflows/dart.yml",
    "retrieved_at": "2025-08-14T12:24:50.273229Z"
  },
  {
    "question": "What i18n-related checks are performed by this workflow on push and pull requests to the main branch?",
    "answer": "name: Check i18n\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\nenv:\n  RAILS_ENV: test\n\njobs:\n  check-i18n:\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v2\n    - name: Install system dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libicu-dev libidn11-dev libprotobuf-dev protobuf-compiler\n    - name: Set up Ruby\n      uses: ruby/setup-ruby@v1\n      with:\n        ruby-version: '2.7'\n        bundler-cache: true\n    - name: Check locale file normalization\n      run: bundle exec i18n-tasks check-normalized\n    - name: Check for unused strings\n      run: bundle exec i18n-tasks unused -l en\n    - name: Check for wrong string interpolations\n      run: bundle exec i18n-tasks check-consistent-interpolations\n    - name: Check that all required locale files exist\n      run: bundle exec rake repo:check_locales_files\n",
    "source": "magicstone-dev/ecko",
    "path": ".github/workflows/check-i18n.yml",
    "url": "https://github.com/magicstone-dev/ecko/blob/a11982ed5341fb447ac3f65543488a014aa319d5/.github/workflows/check-i18n.yml",
    "retrieved_at": "2025-08-14T12:24:51.039771Z"
  },
  {
    "question": "What specific end-to-end tests are executed by this workflow?",
    "answer": "# Runs randomly generated E2E testnets nightly on the v0.37.x branch.\n\n# !! This file should be kept in sync with the e2e-nightly-main.yml file,\n# modulo changes to the version labels.\n\nname: e2e-nightly-37x\non:\n  schedule:\n    - cron: '0 2 * * *'\n\njobs:\n  e2e-nightly-test:\n    # Run parallel jobs for the listed testnet groups (must match the\n    # ./build/generator -g flag)\n    strategy:\n      fail-fast: false\n      matrix:\n        group: ['00', '01', '02', '03', \"04\"]\n    runs-on: ubuntu-latest\n    timeout-minutes: 60\n    steps:\n      - uses: actions/setup-go@v4\n        with:\n          go-version: '1.20'\n\n      - uses: actions/checkout@v3\n        with:\n          ref: 'v0.37.x'\n\n      - name: Capture git repo info\n        id: git-info\n        run: |\n          echo \"branch=`git branch --show-current`\" >> $GITHUB_OUTPUT\n\n      - name: Build\n        working-directory: test/e2e\n        # Run make jobs in parallel, since we can't run steps in parallel.\n        run: make -j2 docker generator runner tests\n\n      - name: Generate testnets\n        working-directory: test/e2e\n        # When changing -g, also change the matrix groups above\n        run: ./build/generator -g 5 -d networks/nightly/ -p\n\n      - name: Run ${{ matrix.p2p }} p2p testnets\n        working-directory: test/e2e\n        run: ./run-multiple.sh networks/nightly/*-group${{ matrix.group }}-*.toml\n\n    outputs:\n      git-branch: ${{ steps.git-info.outputs.branch }}\n\n  e2e-nightly-fail:\n    needs: e2e-nightly-test\n    if: ${{ failure() }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Notify Slack on failure\n        uses: slackapi/slack-github-action@v1.24.0\n        env:\n          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}\n          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK\n          BRANCH: ${{ needs.e2e-nightly-test.outputs.git-branch }}\n          RUN_URL: \"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"\n          COMMITS_URL: \"${{ github.server_url }}/${{ github.repository }}/commits/${{ needs.e2e-nightly-test.outputs.git-branch }}\"\n        with:\n          payload: |\n            {\n              \"blocks\": [\n                {\n                  \"type\": \"section\",\n                  \"text\": {\n                    \"type\": \"mrkdwn\",\n                    \"text\": \":skull: Nightly E2E tests for `${{ env.BRANCH }}` failed. See the <${{ env.RUN_URL }}|run details> and the <${{ env.COMMITS_URL }}|latest commits> possibly related to the failure.\"\n                  }\n                }\n              ]\n            }\n",
    "source": "bnb-chain/greenfield-cometbft",
    "path": ".github/workflows/e2e-nightly-37x.yml",
    "url": "https://github.com/bnb-chain/greenfield-cometbft/blob/1d6ca8f26cf781b5e2f0b09c6b1daf5b20c66751/.github/workflows/e2e-nightly-37x.yml",
    "retrieved_at": "2025-08-14T12:24:51.947805Z"
  },
  {
    "question": "Under what condition is the distribution artifact uploaded in this workflow?",
    "answer": "# This workflow will build a Java project with Gradle\n# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle\n\nname: Java CI\n\non: [ push, pull_request ]\n\njobs:\n  build:\n\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        env:\n          # see https://www.jetbrains.com/idea/download/previous.html\n          # and https://www.jetbrains.com/intellij-repository/snapshots/\n          - IDEA_VERSION: IC-2022.2.5\n          - IDEA_VERSION: IC-2022.3.1\n          - IDEA_VERSION: IC-2023.2.2\n          - IDEA_VERSION: IU-LATEST-EAP-SNAPSHOT\n\n    steps:\n      - uses: actions/checkout@v2\n      - name: Set up JDK 17\n        uses: actions/setup-java@v1\n        with:\n          java-version: 17\n      - name: Build with Gradle\n        run: |\n          ./gradlew -PideaVersion=${IDEA_VERSION} buildPlugin\n          echo \"DIST_FILE=$(find build/distributions/ -name 'jetbrains-plugin-st4-*.zip' -exec basename {} .zip \\;)\" >> $GITHUB_ENV\n        env: ${{ matrix.env }}\n      - name: Archive distribution artifact\n        uses: actions/upload-artifact@v2\n        with:\n          name: ${{env.DIST_FILE}}\n          path: build/distributions/jetbrains-plugin-st4-*.zip\n        if: matrix.env.IDEA_VERSION == 'IC-2022.2.5'\n",
    "source": "antlr/jetbrains-plugin-st4",
    "path": ".github/workflows/gradle.yml",
    "url": "https://github.com/antlr/jetbrains-plugin-st4/blob/1f8246e9d47f13c1e052ddd27232e8d4afaf67d9/.github/workflows/gradle.yml",
    "retrieved_at": "2025-08-14T12:24:53.834344Z"
  },
  {
    "question": "Does this workflow check if the code in a pull request branch is correctly formatted according to scalafmt, comparing it to the `origin/main` branch?",
    "answer": "name: Scalafmt\n\npermissions: read-all\n\non:\n  pull_request:\n    branches: ['**']\n\njobs:\n  build:\n    name: Code is formatted\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout current branch (full)\n        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2\n        with:\n          fetch-depth: 0\n          fetch-tags: true\n          persist-credentials: false\n\n      - name: Check project is formatted\n        uses: jrouly/scalafmt-native-action@v4\n        with:\n          arguments: '--list --mode diff-ref=origin/main'\n",
    "source": "apache/pekko-persistence-dynamodb",
    "path": ".github/workflows/format.yml",
    "url": "https://github.com/apache/pekko-persistence-dynamodb/blob/f88b6b9b20b4d5cec7285a5f049da220998f2dcb/.github/workflows/format.yml",
    "retrieved_at": "2025-08-14T12:24:55.489823Z"
  },
  {
    "question": "What different configurations are tested for KLEE on Linux, based on the matrix strategy?",
    "answer": "name: CI\n\non:\n  pull_request:\n    branches: master\n  push:\n    branches: master\n\n# Defaults for building KLEE\nenv:\n  BASE_IMAGE: ubuntu:bionic-20200807\n  REPOSITORY: klee\n  COVERAGE: 0\n  DISABLE_ASSERTIONS: 0\n  ENABLE_DOXYGEN: 0\n  ENABLE_OPTIMIZED: 1\n  ENABLE_DEBUG: 1\n  GTEST_VERSION: 1.7.0\n  KLEE_RUNTIME_BUILD: \"Debug+Asserts\"\n  LLVM_VERSION: 9\n  METASMT_VERSION: qf_abv\n  MINISAT_VERSION: \"master\"\n  REQUIRES_RTTI: 0\n  SANITIZER_BUILD:\n  SOLVERS: STP:Z3\n  STP_VERSION: 2.3.3\n  TCMALLOC_VERSION: 2.7\n  UCLIBC_VERSION: klee_uclibc_v1.2\n  USE_TCMALLOC: 1\n  USE_LIBCXX: 1\n  Z3_VERSION: 4.8.4\n\njobs:\n  Linux:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        name: [\n                \"LLVM 11\",\n                \"LLVM 10\",\n                \"LLVM 9\",\n                \"LLVM 8\",\n                \"LLVM 7\",\n                \"LLVM 6\",\n                \"LLVM 5\",\n                \"LLVM 4\",\n                \"LLVM 3.9\",\n                \"LLVM 3.8\",\n                \"ASan\",\n                \"UBSan\",\n                \"MSan\",\n                \"Z3 only\",\n                \"metaSMT STP\",\n                \"metaSMT Boolector\",\n                \"STP master\",\n                \"Latest klee-uclibc\",\n                \"Asserts enabled\",\n                \"No TCMalloc, optimised runtime\",\n            ]\n        include:\n          - name: \"LLVM 11\"\n            env:\n              LLVM_VERSION: 11\n          - name: \"LLVM 10\"\n            env:\n              LLVM_VERSION: 10\n          - name: \"LLVM 9\"\n            env:\n              LLVM_VERSION: 9\n          - name: \"LLVM 8\"\n            env:\n              LLVM_VERSION: 8\n          - name: \"LLVM 7\"\n            env:\n              LLVM_VERSION: 7\n          - name: \"LLVM 6\"\n            env:\n              LLVM_VERSION: 6\n          - name: \"LLVM 5\"\n            env:\n              LLVM_VERSION: 5\n          - name: \"LLVM 4\"\n            env:\n              LLVM_VERSION: 4\n          - name: \"LLVM 3.9\"\n            env:\n              LLVM_VERSION: 3.9\n          - name: \"LLVM 3.8\"\n            env:\n              LLVM_VERSION: 3.8\n              USE_LIBCXX: 0\n          # Sanitizer builds. Do unoptimized build otherwise the optimizer might remove problematic code\n          - name: \"ASan\"\n            env:\n              SANITIZER_BUILD: address\n              ENABLE_OPTIMIZED: 0\n              USE_TCMALLOC: 0\n          - name: \"UBSan\"\n            env:\n              SANITIZER_BUILD: undefined\n              ENABLE_OPTIMIZED: 0\n              USE_TCMALLOC: 0\n          - name: \"MSan\"\n            env:\n              SANITIZER_BUILD: memory\n              ENABLE_OPTIMIZED: 0\n              USE_TCMALLOC: 0\n              SOLVERS: STP\n            # Test just using Z3 only\n          - name: \"Z3 only\"\n            env:\n              SOLVERS: Z3\n          # Test just using metaSMT\n          - name: \"metaSMT STP\"\n            env:\n              SOLVERS: metaSMT\n              METASMT_DEFAULT: STP\n              REQUIRES_RTTI: 1\n          - name: \"metaSMT Boolector\"\n            env:\n              SOLVERS: metaSMT\n              METASMT_DEFAULT: BTOR\n              REQUIRES_RTTI: 1\n          # Test we can build against STP master\n          - name: \"STP master\"\n            env:\n              SOLVERS: STP\n              STP_VERSION: master\n          # Check we can build latest klee-uclibc branch\n          - name: \"Latest klee-uclibc\"\n            env:\n              UCLIBC_VERSION: klee_0_9_29\n          # Check at least one build with Asserts disabled.\n          - name: \"Asserts enabled\"\n            env:\n              SOLVERS: STP\n              DISABLE_ASSERTIONS: 1\n          # Check without TCMALLOC and with an optimised runtime library\n          - name: \"No TCMalloc, optimised runtime\"\n            env:\n              USE_TCMALLOC: 0\n              KLEE_RUNTIME_BUILD: \"Release+Debug+Asserts\"\n    steps:\n      - name: Checkout KLEE source code\n        uses: actions/checkout@v2\n      - name: Build KLEE\n        env: ${{ matrix.env }}\n        run: scripts/build/build.sh klee --docker --create-final-image\n      - name: Run tests\n        run: scripts/build/run-tests.sh --run-docker --debug\n\n  macOS:\n    runs-on: macos-latest\n    env:\n      BASE: /tmp\n      SOLVERS: STP\n      UCLIBC_VERSION: 0\n      USE_TCMALLOC: 0\n      USE_LIBCXX: 0\n    steps:\n      - name: Install newer version of Bash\n        run: brew install bash\n      - name: Checkout KLEE source code\n        uses: actions/checkout@v2\n      - name: Build KLEE\n        run: scripts/build/build.sh klee --debug --install-system-deps\n      - name: Run tests\n        run: scripts/build/run-tests.sh /tmp/klee_build* --debug\n\n  Docker:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout KLEE Code\n        uses: actions/checkout@v2\n      - name: Build Docker image\n        run: docker build .\n\n  Coverage:\n    runs-on: ubuntu-latest\n    env:\n      ENABLE_OPTIMIZED: 0\n      COVERAGE: 1\n    steps:\n      - name: Checkout KLEE source code\n        uses: actions/checkout@v2\n      - name: Build KLEE\n        run: scripts/build/build.sh klee --docker --create-final-image\n      - name: Run tests\n        run: scripts/build/run-tests.sh --coverage --upload-coverage --run-docker --debug\n",
    "source": "COMSYS/SymbolicLivenessAnalysis",
    "path": ".github/workflows/build.yaml",
    "url": "https://github.com/COMSYS/SymbolicLivenessAnalysis/blob/69af518cdb6cc4323f2a639e0a15a265552e9df5/.github/workflows/build.yaml",
    "retrieved_at": "2025-08-14T12:24:56.586759Z"
  },
  {
    "question": "Under what conditions does the workflow publish the created NuGet package to NuGet.org?",
    "answer": "name: .NET Core\non:\n  push:\n  workflow_dispatch:\n  release:\n    types: [published]\n\nenv:\n  DEFAULT_VERSION: \"3.1.0.4-alpha\"\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Setup .NET Core 2.2\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: 2.2.x\n      - name: Setup .NET Core 3.1\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: 3.1.x\n      - name: Setup .NET 6\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: 6.0.x\n      - name: Setup .NET 8\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: 8.0.x\n      - name: Build with dotnet\n        run: dotnet build --configuration Release /p:ContinuousIntegrationBuild=true\n      - name: Test\n        run: dotnet test src/PostalCodes.UnitTests/PostalCodes.UnitTests.csproj\n      - name: Extract Version from Release Tag\n        id: get_version\n        run: echo \"VERSION=$(echo '${{ github.event.release.tag_name || env.DEFAULT_VERSION }}' | sed -e 's/^v//')\" >> $GITHUB_ENV\n      - name: Create nuget package\n        run: dotnet pack . -p:PackageVersion=${{ env.VERSION }} -o out --no-build\n      - name: Install dotnet-validate\n        run: dotnet tool install --global dotnet-validate --version 0.0.1-preview.304\n\n      - name: Validate NuGet package\n        run: dotnet-validate package local out/*.nupkg\n\n      - name: Publish\n        if: github.event_name == 'release'\n        run: |\n          dotnet nuget push out/PostalCodes.${{ env.VERSION }}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json\n",
    "source": "Cimpress-MCP/PostalCodes.Net",
    "path": ".github/workflows/dotnetcore.yml",
    "url": "https://github.com/Cimpress-MCP/PostalCodes.Net/blob/1dea354096b5858e6584b8d233db1a88456a02f3/.github/workflows/dotnetcore.yml",
    "retrieved_at": "2025-08-14T12:24:57.771476Z"
  },
  {
    "question": "What specific tests are executed by the `npm test` command in this workflow?",
    "answer": "name: Tests\n\non: [push, pull_request]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@master\n      - name: Use Node.js 12.x\n        uses: actions/setup-node@v1\n        with:\n          node-version: 12.x\n      - name: npm install and test\n        run: |\n          npm install\n          npm test\n",
    "source": "nervetattoo/banner-card",
    "path": ".github/workflows/nodejs.yml",
    "url": "https://github.com/nervetattoo/banner-card/blob/554c77c4fca5019896d336492b81b1fc56f9a281/.github/workflows/nodejs.yml",
    "retrieved_at": "2025-08-14T12:24:58.621683Z"
  },
  {
    "question": "How does the `metadata2gha` command in the `setup_matrix` job determine the test matrix configurations?",
    "answer": "name: CI\n\non: pull_request\n\njobs:\n  setup_matrix:\n    name: 'Setup Test Matrix'\n    runs-on: ubuntu-latest\n    outputs:\n      beaker_setfiles: ${{ steps.get-outputs.outputs.beaker_setfiles }}\n      puppet_major_versions: ${{ steps.get-outputs.outputs.puppet_major_versions }}\n      puppet_unit_test_matrix: ${{ steps.get-outputs.outputs.puppet_unit_test_matrix }}\n    env:\n      BUNDLE_WITHOUT: development:test:release\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup ruby\n        uses: ruby/setup-ruby@v1\n        with:\n          ruby-version: '2.7'\n          bundler-cache: true\n      - name: Run rake validate\n        run: bundle exec rake validate\n      - name: Setup Test Matrix\n        id: get-outputs\n        run: bundle exec metadata2gha --use-fqdn --pidfile-workaround false\n\n  unit:\n    needs: setup_matrix\n    runs-on: ubuntu-latest\n    strategy:\n      fail-fast: false\n      matrix:\n        include: ${{fromJson(needs.setup_matrix.outputs.puppet_unit_test_matrix)}}\n    env:\n      BUNDLE_WITHOUT: development:system_tests:release\n      PUPPET_VERSION: \"~> ${{ matrix.puppet }}.0\"\n    name: Puppet ${{ matrix.puppet }} (Ruby ${{ matrix.ruby }})\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup ruby\n        uses: ruby/setup-ruby@v1\n        with:\n          ruby-version: ${{ matrix.ruby }}\n          bundler-cache: true\n      - name: Run tests\n        run: bundle exec rake\n\n  acceptance:\n    needs: setup_matrix\n    runs-on: ubuntu-latest\n    env:\n      BUNDLE_WITHOUT: development:test:release\n    strategy:\n      fail-fast: false\n      matrix:\n        setfile: ${{fromJson(needs.setup_matrix.outputs.beaker_setfiles)}}\n        puppet: ${{fromJson(needs.setup_matrix.outputs.puppet_major_versions)}}\n    name: ${{ matrix.puppet.name }} - ${{ matrix.setfile.name }}\n    steps:\n      - name: Enable IPv6 on docker\n        run: |\n          echo '{\"ipv6\":true,\"fixed-cidr-v6\":\"2001:db8:1::/64\"}' | sudo tee /etc/docker/daemon.json\n          sudo service docker restart\n      - uses: actions/checkout@v2\n      - name: Setup ruby\n        uses: ruby/setup-ruby@v1\n        with:\n          ruby-version: '2.7'\n          bundler-cache: true\n      - name: Run tests\n        run: bundle exec rake beaker\n        env:\n          BEAKER_PUPPET_COLLECTION: ${{ matrix.puppet.collection }}\n          BEAKER_setfile: ${{ matrix.setfile.value }}\n",
    "source": "scibian/puppet-module-puppet-archive",
    "path": ".github/workflows/ci.yml",
    "url": "https://github.com/scibian/puppet-module-puppet-archive/blob/56ac175624cd57ebd4245348165ea97895f5fd1c/.github/workflows/ci.yml",
    "retrieved_at": "2025-08-14T12:24:59.444331Z"
  },
  {
    "question": "What specific files or directories are excluded from triggering the workflow on push and pull requests?",
    "answer": "# This workflow will install Python dependencies, run tests with a variety of Python versions\n# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions\n\nname: build\n\non:\n  push:\n    branches:\n      - master\n    paths-ignore:\n      - 'README.md'\n      - 'README_CN.md'\n      - 'docs/**'\n      - 'examples/**'\n      - '.dev_scripts/**'\n\n  pull_request:\n    paths-ignore:\n      - 'README.md'\n      - 'README_CN.md'\n      - 'docs/**'\n      - 'examples/**'\n      - '.dev_scripts/**'\n\nconcurrency:\n  group: ${{ github.workflow }}-${{ github.ref }}\n  cancel-in-progress: true\n\njobs:\n  build_cpu:\n    runs-on: ubuntu-18.04\n    strategy:\n      matrix:\n        python-version: [3.7]\n        torch: [1.5.0, 1.6.0, 1.7.0, 1.8.0]\n        include:\n          - torch: 1.5.0\n            torch_version: torch1.5\n            torchvision: 0.6.0\n          - torch: 1.6.0\n            torch_version: torch1.6\n            torchvision: 0.7.0\n          - torch: 1.7.0\n            torch_version: torch1.7\n            torchvision: 0.8.1\n          - torch: 1.8.0\n            torch_version: torch1.8\n            torchvision: 0.9.0\n\n    steps:\n      - uses: actions/checkout@v2\n      - name: Set up Python ${{ matrix.python-version }}\n        uses: actions/setup-python@v2\n        with:\n          python-version: ${{ matrix.python-version }}\n      - name: Upgrade pip\n        run: pip install pip --upgrade\n      - name: Install onnx\n        run: pip install onnx\n      - name: Install PyTorch\n        run: pip install torch==${{matrix.torch}}+cpu torchvision==${{matrix.torchvision}}+cpu -f https://download.pytorch.org/whl/torch_stable.html\n      - name: Install MMCV\n        run: |\n          pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cpu/${{matrix.torch_version}}/index.html\n          python -c 'import mmcv; print(mmcv.__version__)'\n      - name: Install other dependencies\n        run: |\n          pip install -r requirements.txt\n          python -m pip install -r requirements/poseval.txt\n          pip install albumentations>=0.3.2 --no-binary imgaug,albumentations\n      - name: Build and install\n        run: rm -rf .eggs && pip install -e .\n      - name: Run unittests and generate coverage report\n        run: |\n          coverage run --branch --omit=\"mmpose/apis/webcam/*\" --source mmpose -m pytest tests/\n          coverage xml\n          coverage report -m --omit=\"mmpose/apis/webcam/*\"\n\n  build_cuda101:\n    runs-on: ubuntu-18.04\n    container:\n      image: pytorch/pytorch:1.6.0-cuda10.1-cudnn7-devel\n    strategy:\n      matrix:\n        python-version: [3.7]\n        torch: [1.5.0, 1.6.0, 1.7.0, 1.8.0]\n        include:\n          - torch: 1.5.0\n            torch_version: torch1.5\n            torchvision: 0.6.0\n          - torch: 1.6.0\n            torch_version: torch1.6\n            torchvision: 0.7.0\n          - torch: 1.7.0\n            torch_version: torch1.7\n            torchvision: 0.8.1\n          - torch: 1.8.0\n            torch_version: torch1.8\n            torchvision: 0.9.0\n\n    steps:\n      - uses: actions/checkout@v2\n      - name: Set up Python ${{ matrix.python-version }}\n        uses: actions/setup-python@v2\n        with:\n          python-version: ${{ matrix.python-version }}\n      - name: Fetch GPG keys\n        run: |\n          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub\n          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub\n      - name: Install system dependencies\n        run: |\n          apt-get update && apt-get install -y ffmpeg libsm6 libxext6 git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 libturbojpeg\n          apt-get clean\n          rm -rf /var/lib/apt/lists/*\n      - name: Upgrade pip\n        run: python -m pip install pip --upgrade\n      - name: Install dependencies for compiling onnx when python=3.9\n        run: python -m pip install protobuf && apt-get install -y libprotobuf-dev protobuf-compiler\n        if: ${{matrix.python-version == '3.9'}}\n      - name: Install PyTorch\n        run: python -m pip install torch==${{matrix.torch}}+cu101 torchvision==${{matrix.torchvision}}+cu101 -f https://download.pytorch.org/whl/torch_stable.html\n      - name: Install mmpose dependencies\n        run: |\n          python -V\n          python -m pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu101/${{matrix.torch_version}}/index.html\n          python -m pip install -r requirements.txt\n          python -m pip install -r requirements/poseval.txt\n          python -m pip install albumentations>=0.3.2 --no-binary imgaug,albumentations\n          python -c 'import mmcv; print(mmcv.__version__)'\n      - name: Build and install\n        run: |\n          rm -rf .eggs\n          python setup.py check -m -s\n          TORCH_CUDA_ARCH_LIST=7.0 python -m pip install -e .\n      - name: Run unittests and generate coverage report\n        run: |\n          coverage run --branch --omit=\"mmpose/apis/webcam/*\" --source mmpose -m pytest tests/\n          coverage xml\n          coverage report -m --omit=\"mmpose/apis/webcam/*\"\n      - name: Upload coverage to Codecov\n        uses: codecov/codecov-action@v2\n        with:\n          files: ./coverage.xml\n          flags: unittests\n          env_vars: OS,PYTHON\n          name: codecov-umbrella\n          fail_ci_if_error: false\n\n  build_cuda102:\n    runs-on: ubuntu-18.04\n    container:\n      image: pytorch/pytorch:1.9.0-cuda10.2-cudnn7-devel\n    strategy:\n      matrix:\n        python-version: [3.6, 3.7, 3.8, 3.9]\n        torch: [1.9.0, 1.10.0]\n        include:\n          - torch: 1.9.0\n            torch_version: torch1.9\n            torchvision: 0.10.0\n          - torch: 1.10.0\n            torch_version: torch1.10\n            torchvision: 0.11.0\n\n    steps:\n      - uses: actions/checkout@v2\n      - name: Set up Python ${{ matrix.python-version }}\n        uses: actions/setup-python@v2\n        with:\n          python-version: ${{ matrix.python-version }}\n      - name: Fetch GPG keys\n        run: |\n          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub\n          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub\n      - name: Install system dependencies\n        run: |\n          apt-get update && apt-get install -y ffmpeg libsm6 libxext6 git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 libturbojpeg\n          apt-get clean\n          rm -rf /var/lib/apt/lists/*\n      - name: Upgrade pip\n        run: python -m pip install pip --upgrade\n      - name: Install dependencies for compiling onnx when python=3.9\n        run: python -m pip install protobuf && apt-get update && apt-get -y install libprotobuf-dev protobuf-compiler cmake\n        if: ${{matrix.python-version == '3.9'}}\n      - name: Install PyTorch\n        run: python -m pip install torch==${{matrix.torch}}+cu102 torchvision==${{matrix.torchvision}}+cu102 -f https://download.pytorch.org/whl/torch_stable.html\n      - name: Install mmpose dependencies\n        run: |\n          python -V\n          python -m pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu102/${{matrix.torch_version}}/index.html\n          python -m pip install -r requirements.txt\n          python -m pip install -r requirements/poseval.txt\n          python -m pip install albumentations>=0.3.2 --no-binary imgaug,albumentations\n          python -c 'import mmcv; print(mmcv.__version__)'\n      - name: Build and install\n        run: |\n          rm -rf .eggs\n          python setup.py check -m -s\n          TORCH_CUDA_ARCH_LIST=7.0 python -m pip install -e .\n      - name: Run unittests and generate coverage report\n        run: |\n          coverage run --branch --omit=\"mmpose/apis/webcam/*\" --source mmpose -m pytest tests/\n          coverage xml\n          coverage report -m --omit=\"mmpose/apis/webcam/*\"\n      - name: Upload coverage to Codecov\n        uses: codecov/codecov-action@v2\n        with:\n          files: ./coverage.xml\n          flags: unittests\n          env_vars: OS,PYTHON\n          name: codecov-umbrella\n          fail_ci_if_error: false\n\n  build_windows:\n    runs-on: ${{ matrix.os }}\n    strategy:\n      matrix:\n        os: [windows-2022]\n        python-version: [3.8]\n        platform: [cpu]\n    steps:\n      - uses: actions/checkout@v2\n      - name: Set up Python ${{ matrix.python-version }}\n        uses: actions/setup-python@v2\n        with:\n          python-version: ${{ matrix.python-version }}\n      - name: Upgrade pip\n        run: python -m pip install pip --upgrade --user\n      - name: Install PyTorch\n        # As a complement to Linux CI, we test on PyTorch LTS version\n        run: python -m pip install torch==1.8.2+${{ matrix.platform }} torchvision==0.9.2+${{ matrix.platform }} -f https://download.pytorch.org/whl/lts/1.8/torch_lts.html\n      - name: Install MMCV\n        run: python -m pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cpu/torch1.8/index.html --only-binary mmcv-full\n      - name: Install mmpose dependencies\n        run: |\n          python -V\n          python -m pip install xtcocotools\n          python -m pip install -r requirements/tests.txt -r requirements/optional.txt -r requirements/poseval.txt\n          python -m pip install albumentations>=0.3.2 --no-binary imgaug,albumentations\n          python -c 'import mmcv; print(mmcv.__version__)'\n      - name: Show pip list\n        run: python -m pip list\n      - name: Build and install\n        run: python -m pip install -e .\n      - name: Run unittests\n        run: coverage run --branch --source mmpose -m pytest tests -sv\n      - name: Generate coverage report\n        run: |\n          coverage run --branch --omit=\"mmpose/apis/webcam/*\" --source mmpose -m pytest tests/\n          coverage xml\n          coverage report -m --omit=\"mmpose/apis/webcam/*\"\n      - name: Upload coverage to Codecov\n        uses: codecov/codecov-action@v2\n        with:\n          file: ./coverage.xml\n          flags: unittests\n          env_vars: OS,PYTHON\n          name: codecov-umbrella\n          fail_ci_if_error: false\n",
    "source": "DeepLink-org/ParrotsDL-mmpose",
    "path": ".github/workflows/build.yml",
    "url": "https://github.com/DeepLink-org/ParrotsDL-mmpose/blob/5734804f05fdcc8849bfee34d79f8bd47b9a9fdb/.github/workflows/build.yml",
    "retrieved_at": "2025-08-14T12:50:06.774488Z"
  },
  {
    "question": "Under what conditions does the \"prepare\" job not run, and how does that impact the \"release\" job?",
    "answer": "name: Release\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  prepare:\n    runs-on: ubuntu-latest\n    if: \"! contains(github.event.head_commit.message, '[skip ci]')\"\n    steps:\n      - run: echo \"${{ github.event.head_commit.message }}\"\n  release:\n    needs: prepare\n    name: Release\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          persist-credentials: false\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: 18\n      - name: Install dependencies\n        run: npm ci\n      - name: Release\n        env:\n          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}\n          GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}\n          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}\n          GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMITTER_NAME }}\n          GITHUB_TOKEN: ${{ secrets.PA_TOKEN }}\n          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n        run: npx semantic-release\n",
    "source": "americanexpress/jest-json-schema",
    "path": ".github/workflows/release.yml",
    "url": "https://github.com/americanexpress/jest-json-schema/blob/5bc73a66ea7e1b6164923c69d12103a36dfdd21c/.github/workflows/release.yml",
    "retrieved_at": "2025-08-14T12:50:07.442808Z"
  },
  {
    "question": "What actions are performed to lint the code and report the results when a pull request targets the main branch?",
    "answer": "name: Lint\non:\n  pull_request_target:\n    branches:\n      - main\njobs:\n  lint:\n    strategy:\n      matrix:\n        node: [\"14.x\"]\n        os: [ubuntu-latest]\n    runs-on: ${{ matrix.os }}\n\n    steps:\n      - name: Checkout repo\n        uses: actions/checkout@v2\n        with:\n          ref: ${{ github.event.pull_request.head.sha }}\n          fetch-depth: 2\n\n      - name: Use Node.js 14.x\n        uses: actions/setup-node@v2\n        with:\n          node-version: ${{ matrix.node }}\n          # cache: \"yarn\"\n          # cache-dependency-path: yarn.lock\n\n      - name: Install deps\n        if: steps.yarn-cache.outputs.cache-hit != 'true'\n        run: yarn\n\n      - name: Lint\n        run: yarn lint:report\n        continue-on-error: true\n\n      - name: Merge lint reports\n        run: jq -s '[.[]]|flatten' lint-results/*.json &> lint-results/eslint_report.json\n\n      - name: Annotate Code Linting Results\n        uses: ataylorme/eslint-annotate-action@1.2.0\n        with:\n          repo-token: \"${{ secrets.GITHUB_TOKEN }}\"\n          report-json: \"lint-results/eslint_report.json\"\n\n      - name: Upload ESLint report\n        if: ${{ always() }}\n        uses: actions/upload-artifact@v2\n        with:\n          name: lint-results\n          path: lint-results\n",
    "source": "meruhealth/calendso",
    "path": ".github/workflows/lint.yml",
    "url": "https://github.com/meruhealth/calendso/blob/d88af28e441320b9d1e32babb2bd9d11bdb0834d/.github/workflows/lint.yml",
    "retrieved_at": "2025-08-14T12:50:08.214848Z"
  },
  {
    "question": "What triggers this workflow, and what distinguishes those triggers?",
    "answer": "name: 'build and deploy Speckle functions'\non:\n  workflow_dispatch:\n  push:\n    tags:\n      - '*'\n\njobs:\n  publish-automate-function-version: # make sure the action works on a clean machine without building\n    env:\n      FUNCTION_SCHEMA_FILE_NAME: functionSchema.json\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4.1.1\n      - uses: actions/setup-python@v5\n        with:\n          python-version: '3.11'\n      - name: Install and configure Poetry\n        uses: snok/install-poetry@v1\n        with:\n          version: 1.3.2\n          virtualenvs-create: false\n          virtualenvs-in-project: false\n          installer-parallel: true\n      - name: Restore dependencies\n        run: poetry install --no-root\n      - name: Extract functionInputSchema\n        id: extract_schema\n        run: |\n          python main.py generate_schema ${HOME}/${{ env.FUNCTION_SCHEMA_FILE_NAME }}\n      - name: Speckle Automate Function - Build and Publish\n        uses: specklesystems/speckle-automate-github-composite-action@0.8.0\n        with:\n          speckle_automate_url: ${{ env.SPECKLE_AUTOMATE_URL || 'https://automate.speckle.dev' }} \n          speckle_token: ${{ secrets.SPECKLE_FUNCTION_TOKEN }}\n          speckle_function_id: ${{ secrets.SPECKLE_FUNCTION_ID }}\n          speckle_function_input_schema_file_path: ${{ env.FUNCTION_SCHEMA_FILE_NAME }}\n          speckle_function_command: 'python -u main.py run'\n",
    "source": "specklesystems/Mott-mac-demo",
    "path": ".github/workflows/main.yml",
    "url": "https://github.com/specklesystems/Mott-mac-demo/blob/d08b92f1948bf28ab8a39f2c3b2c75e56bf297fc/.github/workflows/main.yml",
    "retrieved_at": "2025-08-14T12:50:08.879430Z"
  },
  {
    "question": "What happens when a push event triggers this workflow with a tag?",
    "answer": "---\nname: release\n\non:\n  push:\n    tags: [\"*\"]\n\npermissions:\n  id-token: write\n  contents: write\n\njobs:\n  release:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Check out code\n        uses: actions/checkout@v2\n\n      - name: version\n        run: echo \"version=$(/usr/bin/basename ${{ github.ref }})\" >> $GITHUB_OUTPUT\n        id: version\n\n      - name: release\n        uses: actions/create-release@v1\n        id: create_release\n        with:\n          draft: false\n          prerelease: false\n          release_name: ${{ steps.version.outputs.version }}\n          tag_name: ${{ github.ref }}\n        env:\n          GITHUB_TOKEN: ${{ github.token }}\n\n      - name: Package\n        uses: a7ul/tar-action@v1.1.2\n        with:\n          files: .\n          command: c\n          outPath: ${{ steps.version.outputs.version }}.tar.gz\n\n      - name: Sign release with Sigstore\n        continue-on-error: true\n        uses: sigstore/gh-action-sigstore-python@v0.0.9\n        with:\n          inputs: ${{ steps.version.outputs.version }}.tar.gz\n          release-signing-artifacts: true\n          upload-signing-artifacts: true\n\n      - name: upload signed asset\n        continue-on-error: true\n        uses: actions/upload-release-asset@v1\n        env:\n          GITHUB_TOKEN: ${{ github.token }}\n        with:\n          upload_url: ${{ steps.create_release.outputs.upload_url }}\n          asset_path: ${{ steps.version.outputs.version }}.tar.gz\n          asset_name: ${{ steps.version.outputs.version }}.tar.gz\n          asset_content_type: application/gzip\n\n      - name: upload sigstore certificate\n        continue-on-error: true\n        uses: actions/upload-release-asset@v1\n        env:\n          GITHUB_TOKEN: ${{ github.token }}\n        with:\n          upload_url: ${{ steps.create_release.outputs.upload_url }}\n          asset_path: ${{ steps.version.outputs.version }}.tar.gz.crt\n          asset_name: ${{ steps.version.outputs.version }}.tar.gz.crt\n          asset_content_type: application/x-x509-ca-cert\n\n      - name: upload sigstore signature\n        continue-on-error: true\n        uses: actions/upload-release-asset@v1\n        env:\n          GITHUB_TOKEN: ${{ github.token }}\n        with:\n          upload_url: ${{ steps.create_release.outputs.upload_url }}\n          asset_path: ${{ steps.version.outputs.version }}.tar.gz.sig\n          asset_name: ${{ steps.version.outputs.version }}.tar.gz.sig\n          asset_content_type: application/octet-stream\n\n      - name: Build and Deploy Collection\n        uses: 0x022b/galaxy-role-import-action@1.0.0\n        with:\n          galaxy_api_key: \"${{ secrets.ANSIBLE_GALAXY_TOKEN }}\"\n",
    "source": "ipr-cnrs/glpi-agent",
    "path": ".github/workflows/release.yaml",
    "url": "https://github.com/ipr-cnrs/glpi-agent/blob/55a7d8b68c8dee8b30b2c2f65fbc9d66ad7eabba/.github/workflows/release.yaml",
    "retrieved_at": "2025-08-14T12:50:09.700604Z"
  },
  {
    "question": "What automated code formatting and fixing tasks are executed by the `autofix` job in this workflow?",
    "answer": "name: autofix.ci # needed to securely identify the workflow\n\non:\n  pull_request:\n  push:\n    branches: [\"main\"]\n\npermissions:\n  contents: read\n\njobs:\n  autofix:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: pnpm/action-setup@v4\n      - uses: actions/setup-node@v4\n        with:\n          node-version: 20\n          cache: \"pnpm\"\n      - run: pnpm install\n      - run: pnpm automd\n      - run: pnpm lint:fix\n      - uses: autofix-ci/action@635ffb0c9798bd160680f18fd73371e355b85f27\n        with:\n          commit-message: \"chore: apply automated updates\"\n",
    "source": "unjs/runtime-compat",
    "path": ".github/workflows/autofix.yml",
    "url": "https://github.com/unjs/runtime-compat/blob/9a2246b51cb25292975a24619394bc2c1754a445/.github/workflows/autofix.yml",
    "retrieved_at": "2025-08-14T12:50:10.490003Z"
  },
  {
    "question": "What specific compliance checks are performed by the `check_compliance` job, and how are the results reported?",
    "answer": "name: Compliance Checks\n\non: pull_request\n\njobs:\n  maintainer_check:\n    runs-on: ubuntu-latest\n    name: Check MAINTAINERS file\n    steps:\n    - name: Checkout the code\n      uses: actions/checkout@v2\n      with:\n        ref: ${{ github.event.pull_request.head.sha }}\n        fetch-depth: 0\n    - name: Run Maintainers Script\n      id: maintainer\n      env:\n        BASE_REF: ${{ github.base_ref }}\n      run: |\n        python3 ./scripts/get_maintainer.py path CMakeLists.txt\n\n  check_compliance:\n    runs-on: ubuntu-latest\n    name: Run compliance checks on patch series (PR)\n    steps:\n    - name: Update PATH for west\n      run: |\n        echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n\n    - name: Checkout the code\n      uses: actions/checkout@v2\n      with:\n        ref: ${{ github.event.pull_request.head.sha }}\n        fetch-depth: 0\n\n    - name: cache-pip\n      uses: actions/cache@v1\n      with:\n        path: ~/.cache/pip\n        key: ${{ runner.os }}-doc-pip\n\n    - name: Install python dependencies\n      run: |\n        pip3 install setuptools\n        pip3 install wheel\n        pip3 install python-magic junitparser==1.6.3 gitlint pylint pykwalify\n        pip3 install west\n\n    - name: west setup\n      env:\n        BASE_REF: ${{ github.base_ref }}\n      run: |\n        git config --global user.email \"you@example.com\"\n        git config --global user.name \"Your Name\"\n        git remote -v\n        git rebase origin/${BASE_REF}\n        # debug\n        git log  --pretty=oneline | head -n 10\n        west init -l . || true\n        west update 2>&1 1> west.update.log || west update 2>&1 1> west.update2.log\n\n    - name: Run Compliance Tests\n      continue-on-error: true\n      id: compliance\n      env:\n        BASE_REF: ${{ github.base_ref }}\n      run: |\n        export ZEPHYR_BASE=$PWD\n        # debug\n        ls -la\n        git log  --pretty=oneline | head -n 10\n        ./scripts/ci/check_compliance.py -m Devicetree -m Gitlint -m Identity -m Nits -m pylint -m checkpatch -m Kconfig -c origin/${BASE_REF}..\n\n    - name: upload-results\n      uses: actions/upload-artifact@master\n      continue-on-error: True\n      with:\n        name: compliance.xml\n        path: compliance.xml\n\n    - name: check-warns\n      run: |\n        if [[ ! -s \"compliance.xml\" ]]; then\n          exit 1;\n        fi\n\n        for file in Nits.txt checkpatch.txt Identity.txt Gitlint.txt pylint.txt Devicetree.txt Kconfig.txt; do\n          if [[ -s $file ]]; then\n            errors=$(cat $file)\n            errors=\"${errors//'%'/'%25'}\"\n            errors=\"${errors//$'\\n'/'%0A'}\"\n            errors=\"${errors//$'\\r'/'%0D'}\"\n            echo \"::error file=${file}::$errors\"\n            exit=1\n          fi\n        done\n\n        if [ \"${exit}\" == \"1\" ]; then\n          exit 1;\n        fi\n",
    "source": "sofarocean/zephyr",
    "path": ".github/workflows/compliance.yml",
    "url": "https://github.com/sofarocean/zephyr/blob/429954f467b388b839c8bfedc51f39a5fb3609d1/.github/workflows/compliance.yml",
    "retrieved_at": "2025-08-14T12:50:11.384065Z"
  },
  {
    "question": "Under what conditions will the \"bulk-import\" job actually run, given the `if` condition?",
    "answer": "name: \"bulk quest import\"\non:\n  schedule:\n    - cron: '0 10 * * *' # UTC time, that's 5:00 am EST, 2:00 am PST.\n  workflow_dispatch:\n    inputs:\n      reason:\n        description: \"The reason for running the bulk import workflow\"\n        required: true\n        default: \"Initial import into Quest (Azure DevOps)\"\n\njobs:\n  bulk-import:\n    runs-on: ubuntu-latest\n    permissions:\n      issues: write\n    if: ${{ github.repository_owner == 'dotnet' }}\n\n    steps:\n      - name: \"Print manual bulk import run reason\"\n        if: ${{ github.event_name == 'workflow_dispatch' }}\n        run: |\n          echo \"Reason: ${{ github.event.inputs.reason }}\"\n\n      - name: bulk-sequester\n        id: bulk-sequester\n        uses: dotnet/docs-tools/actions/sequester@main\n        env:\n          ImportOptions__ApiKeys__GitHubToken: ${{ secrets.GITHUB_TOKEN }}\n          ImportOptions__ApiKeys__OSPOKey: ${{ secrets.OSPO_KEY }}\n          ImportOptions__ApiKeys__QuestKey: ${{ secrets.QUEST_KEY }}\n        with:\n          org: ${{ github.repository_owner }}\n          repo: ${{ github.repository }}\n          issue: '-1'\n",
    "source": "void0620/ASP.NET-Core",
    "path": ".github/workflows/quest-bulk.yml",
    "url": "https://github.com/void0620/ASP.NET-Core/blob/d56a806f9d8c99ba375db558c49a38faf7aa09ec/.github/workflows/quest-bulk.yml",
    "retrieved_at": "2025-08-14T12:50:12.324009Z"
  },
  {
    "question": "For the Windows MSVC builds, what environment variables are being set using the Visual Studio batch script?",
    "answer": "name: range-v3 CI\n\n# Trigger on pushes to all branches and for all pull-requests\non: [push, pull_request]\n\nenv:\n  CMAKE_VERSION: 3.16.2\n  NINJA_VERSION: 1.9.0\n\njobs:\n  build:\n    name: ${{ matrix.config.name }}\n    runs-on: ${{ matrix.config.os }}\n    strategy:\n      fail-fast: false\n      matrix:\n        config:\n        # GCC-6\n        - {\n            name: \"Linux GCC 6 Debug (C++14)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: Debug,\n            cc: \"gcc-6\", cxx: \"g++-6\",\n            cxx_standard: 14,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 6 Release (C++14)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-6\", cxx: \"g++-6\",\n            cxx_standard: 14,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 6 Debug (C++17)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: Debug,\n            cc: \"gcc-6\", cxx: \"g++-6\",\n            cxx_standard: 17,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 6 Release (C++17)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-6\", cxx: \"g++-6\",\n            cxx_standard: 17,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 6 Release (C++17, Concepts)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-6\", cxx: \"g++-6\",\n            cxx_standard: 17,\n          }\n\n        # GCC-7\n        - {\n            name: \"Linux GCC 7 Debug (C++14)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: Debug,\n            cc: \"gcc-7\", cxx: \"g++-7\",\n            cxx_standard: 14,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 7 Release (C++14)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-7\", cxx: \"g++-7\",\n            cxx_standard: 14,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 7 Debug (C++17)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: Debug,\n            cc: \"gcc-7\", cxx: \"g++-7\",\n            cxx_standard: 17,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 7 Release (C++17)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-7\", cxx: \"g++-7\",\n            cxx_standard: 17,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 7 Release (C++17, Concepts)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-7\", cxx: \"g++-7\",\n            cxx_standard: 17,\n          }\n\n        # GCC-8\n        - {\n            name: \"Linux GCC 8 Debug (C++14)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: Debug,\n            cc: \"gcc-8\", cxx: \"g++-8\",\n            cxx_standard: 14,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 8 Release (C++14)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-8\", cxx: \"g++-8\",\n            cxx_standard: 14,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 8 Debug (C++17)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: Debug,\n            cc: \"gcc-8\", cxx: \"g++-8\",\n            cxx_standard: 17,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 8 Release (C++17)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-8\", cxx: \"g++-8\",\n            cxx_standard: 17,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 8 Release (C++17, Concepts)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-8\", cxx: \"g++-8\",\n            cxx_standard: 17,\n          }\n\n        # GCC-9\n        - {\n            name: \"Linux GCC 9 Debug (C++17)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: Debug,\n            cc: \"gcc-9\", cxx: \"g++-9\",\n            cxx_standard: 17,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 9 Release (C++17)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-9\", cxx: \"g++-9\",\n            cxx_standard: 17,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 9 Debug (C++20)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: Debug,\n            cc: \"gcc-9\", cxx: \"g++-9\",\n            cxx_standard: 20,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 9 Release (C++20)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-9\", cxx: \"g++-9\",\n            cxx_standard: 20,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux GCC 9 Release (C++20, Concepts)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-9\", cxx: \"g++-9\",\n            cxx_standard: 20,\n          }\n\n        # GCC-10\n        - {\n            name: \"Linux GCC 10 Debug (C++20, Concepts)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: Debug,\n            cc: \"gcc-10\", cxx: \"g++-10\",\n            cxx_standard: 20\n          }\n        - {\n            name: \"Linux GCC 10 Release (C++20, Concepts)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: RelWithDebInfo,\n            cc: \"gcc-10\", cxx: \"g++-10\",\n            cxx_standard: 20\n          }\n\n        # Clang-5.0\n        - {\n            name: \"Linux Clang 5.0 Debug (C++14 / libc++ / ASAN)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: Debug,\n            cc: \"clang-5.0\", cxx: \"clang++-5.0\",\n            cxx_standard: 14,\n            cxx_asan: true,\n            libcxx: true\n          }\n        - {\n            name: \"Linux Clang 5.0 Debug (C++17 / ASAN)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: Debug,\n            cc: \"clang-5.0\", cxx: \"clang++-5.0\",\n            cxx_standard: 17,\n            cxx_asan: true,\n          }\n\n        # Clang-6.0\n        - {\n            name: \"Linux Clang 6.0 Debug (C++14 / libc++ / ASAN)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: Debug,\n            cc: \"clang-6.0\", cxx: \"clang++-6.0\",\n            cxx_standard: 14,\n            cxx_asan: true,\n            libcxx: true\n          }\n        - {\n            name: \"Linux Clang 6.0 Debug (C++17 / ASAN)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-18.04,\n            build_type: Debug,\n            cc: \"clang-6.0\", cxx: \"clang++-6.0\",\n            cxx_standard: 17,\n            cxx_asan: true,\n          }\n\n        # Clang-8\n        - {\n            name: \"Linux Clang 8 Debug (C++14 / libc++ / ASAN)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: Debug,\n            cc: \"clang-8\", cxx: \"clang++-8\",\n            cxx_standard: 14,\n            cxx_asan: true,\n            libcxx: true\n          }\n        - {\n            name: \"Linux Clang 8 Debug (C++17 / ASAN)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: Debug,\n            cc: \"clang-8\", cxx: \"clang++-8\",\n            cxx_standard: 17,\n            cxx_asan: true,\n          }\n\n        # Clang-9\n        - {\n            name: \"Linux Clang 9 Debug (C++17 / ASAN)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: Debug,\n            cc: \"clang-9\", cxx: \"clang++-9\",\n            cxx_standard: 17,\n            cxx_asan: true,\n          }\n        - {\n            name: \"Linux Clang 9 Release (C++17)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: RelWithDebInfo,\n            cc: \"clang-9\", cxx: \"clang++-9\",\n            cxx_standard: 17,\n          }\n\n        # Clang-10\n        - {\n            name: \"Linux Clang 10 Debug (C++20 / ASAN)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: Debug,\n            cc: \"clang-10\", cxx: \"clang++-10\",\n            cxx_standard: 20,\n            cxx_asan: true,\n            cxx_concepts: false\n          }\n        - {\n            name: \"Linux Clang 10 Release (C++20 / Concepts)\", artifact: \"Linux.tar.xz\",\n            os: ubuntu-latest,\n            build_type: RelWithDebInfo,\n            cc: \"clang-10\", cxx: \"clang++-10\",\n            cxx_standard: 20,\n          }\n\n        # AppleClang\n        - {\n            name: \"macOS Clang Debug (C++17)\", artifact: \"macOS.tar.xz\",\n            os: macos-latest,\n            build_type: Debug,\n            cc: \"clang\", cxx: \"clang++\",\n            cxx_standard: 17,\n            cxx_asan: true,\n          }\n        - {\n            name: \"macOS Clang Release (C++17)\", artifact: \"macOS.tar.xz\",\n            os: macos-latest,\n            build_type: RelWithDebInfo,\n            cc: \"clang\", cxx: \"clang++\",\n            cxx_standard: 17,\n          }\n        - {\n            name: \"macOS Clang Debug (C++20 / ASAN)\", artifact: \"macOS.tar.xz\",\n            os: macos-latest,\n            build_type: Debug,\n            cc: \"clang\", cxx: \"clang++\",\n            cxx_standard: 20,\n            cxx_asan: true,\n          }\n        - {\n            name: \"macOS Clang Release (C++20)\", artifact: \"macOS.tar.xz\",\n            os: macos-latest,\n            build_type: RelWithDebInfo,\n            cc: \"clang\", cxx: \"clang++\",\n            cxx_standard: 20,\n          }\n\n        # MSVC 2022\n        - {\n            name: \"Windows MSVC 2022 Debug (C++17)\", artifact: \"Windows-MSVC.tar.xz\",\n            os: windows-latest,\n            build_type: Debug,\n            cc: \"cl\", cxx: \"cl\",\n            environment_script: \"C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat\",\n            cxx_standard: 17,\n          }\n        - {\n            name: \"Windows MSVC 2022 Release (C++17)\", artifact: \"Windows-MSVC.tar.xz\",\n            os: windows-latest,\n            build_type: RelWithDebInfo,\n            cc: \"cl\", cxx: \"cl\",\n            environment_script: \"C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat\",\n            cxx_standard: 17,\n          }\n        - {\n            name: \"Windows MSVC 2022 Debug (C++20)\", artifact: \"Windows-MSVC.tar.xz\",\n            os: windows-latest,\n            build_type: Debug,\n            cc: \"cl\", cxx: \"cl\",\n            environment_script: \"C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat\",\n            cxx_standard: 20,\n          }\n        - {\n            name: \"Windows MSVC 2022 Release (C++20)\", artifact: \"Windows-MSVC.tar.xz\",\n            os: windows-latest,\n            build_type: RelWithDebInfo,\n            cc: \"cl\", cxx: \"cl\",\n            environment_script: \"C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat\",\n            cxx_standard: 20,\n          }\n\n    steps:\n    - uses: actions/checkout@v1\n\n    - name: Download Ninja and CMake\n      id: cmake_and_ninja\n      shell: cmake -P {0}\n      run: |\n        set(cmake_version $ENV{CMAKE_VERSION})\n        set(ninja_version $ENV{NINJA_VERSION})\n\n        message(STATUS \"Using host CMake version: ${CMAKE_VERSION}\")\n\n        if (\"${{ runner.os }}\" STREQUAL \"Windows\")\n          set(ninja_suffix \"win.zip\")\n          set(cmake_suffix \"win64-x64.zip\")\n          set(cmake_dir \"cmake-${cmake_version}-win64-x64/bin\")\n        elseif (\"${{ runner.os }}\" STREQUAL \"Linux\")\n          set(ninja_suffix \"linux.zip\")\n          set(cmake_suffix \"Linux-x86_64.tar.gz\")\n          set(cmake_dir \"cmake-${cmake_version}-Linux-x86_64/bin\")\n        elseif (\"${{ runner.os }}\" STREQUAL \"macOS\")\n          set(ninja_suffix \"mac.zip\")\n          set(cmake_suffix \"Darwin-x86_64.tar.gz\")\n          set(cmake_dir \"cmake-${cmake_version}-Darwin-x86_64/CMake.app/Contents/bin\")\n        endif()\n\n        set(ninja_url \"https://github.com/ninja-build/ninja/releases/download/v${ninja_version}/ninja-${ninja_suffix}\")\n        file(DOWNLOAD \"${ninja_url}\" ./ninja.zip SHOW_PROGRESS)\n        execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./ninja.zip)\n\n        set(cmake_url \"https://github.com/Kitware/CMake/releases/download/v${cmake_version}/cmake-${cmake_version}-${cmake_suffix}\")\n        file(DOWNLOAD \"${cmake_url}\" ./cmake.zip SHOW_PROGRESS)\n        execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./cmake.zip)\n\n        # Save the path for other steps\n        file(TO_CMAKE_PATH \"$ENV{GITHUB_WORKSPACE}/${cmake_dir}\" cmake_dir)\n        message(\"::set-output name=cmake_dir::${cmake_dir}\")\n\n        if (NOT \"${{ runner.os }}\" STREQUAL \"Windows\")\n          execute_process(\n            COMMAND chmod +x ninja\n            COMMAND chmod +x ${cmake_dir}/cmake\n          )\n        endif()\n\n    - name: Install GCC or Clang\n      id: install_gcc_clang\n      if: startsWith(matrix.config.os, 'ubuntu')\n      shell: bash\n      working-directory: ${{ env.HOME }}\n      run: |\n        sudo apt-get install -y ${{matrix.config.cc}} ${{matrix.config.cxx}}\n\n    - name: Install libc++\n      id: install_libcxx\n      if: matrix.config.libcxx\n      shell: bash\n      working-directory: ${{ env.HOME }}\n      env:\n        CC: ${{ matrix.config.cc }}\n        CXX: ${{ matrix.config.cxx }}\n      run: |\n        $GITHUB_WORKSPACE/install_libcxx.sh\n\n    - name: Configure\n      shell: cmake -P {0}\n      run: |\n        set(ENV{CC} ${{ matrix.config.cc }})\n        set(ENV{CXX} ${{ matrix.config.cxx }})\n\n        if (\"${{ runner.os }}\" STREQUAL \"Windows\" AND NOT \"x${{ matrix.config.environment_script }}\" STREQUAL \"x\")\n          execute_process(\n            COMMAND \"${{ matrix.config.environment_script }}\" && set\n            OUTPUT_FILE environment_script_output.txt\n          )\n          set(cxx_flags \"/permissive- /EHsc\")\n          file(STRINGS environment_script_output.txt output_lines)\n          foreach(line IN LISTS output_lines)\n            if (line MATCHES \"^([a-zA-Z0-9_-]+)=(.*)$\")\n              set(ENV{${CMAKE_MATCH_1}} \"${CMAKE_MATCH_2}\")\n            endif()\n          endforeach()\n        endif()\n\n        set(path_separator \":\")\n        if (\"${{ runner.os }}\" STREQUAL \"Windows\")\n          set(path_separator \";\")\n        endif()\n        set(ENV{PATH} \"$ENV{GITHUB_WORKSPACE}${path_separator}$ENV{PATH}\")\n\n        if (\"x${{ matrix.config.libcxx }}\" STREQUAL \"xtrue\")\n          set(cxx_flags \"${cxx_flags} -stdlib=libc++ -nostdinc++ -cxx-isystem $ENV{GITHUB_WORKSPACE}/llvm/include/c++/v1/ -Wno-unused-command-line-argument\")\n          set(link_flags \"${link_flags} -L $ENV{GITHUB_WORKSPACE}/llvm/lib -Wl,-rpath,$ENV{GITHUB_WORKSPACE}/llvm/lib -lc++abi\")\n        endif()\n\n        if (\"${{ matrix.config.cxx }}\" MATCHES \"clang.*\")\n            # clang spurious warning on <=> use\n            set(cxx_flags \"${cxx_flags} -Wno-zero-as-null-pointer-constant\")\n        endif()\n\n        if (\"x${{ matrix.config.cxx_asan }}\" STREQUAL \"xtrue\")\n          set(cxx_flags \"${cxx_flags} -fsanitize=address -fno-omit-frame-pointer\")\n        endif()\n\n        set(cxx_concepts ON)\n        if (\"x${{ matrix.config.cxx_concepts }}\" STREQUAL \"xfalse\")\n          set(cxx_concepts OFF)\n        endif()\n\n        execute_process(\n          COMMAND ${{ steps.cmake_and_ninja.outputs.cmake_dir }}/cmake\n            -S .\n            -B build\n            -G Ninja\n            -D CMAKE_BUILD_TYPE=${{ matrix.config.build_type }}\n            -D CMAKE_MAKE_PROGRAM:STRING=ninja\n            -D CMAKE_CXX_STANDARD:STRING=${{ matrix.config.cxx_standard }}\n            -D \"CMAKE_CXX_FLAGS:STRING=${cxx_flags}\"\n            -D \"CMAKE_EXE_LINKER_FLAGS:STRING=${link_flags}\"\n            -D CMAKE_VERBOSE_MAKEFILE:BOOL=ON\n            -D RANGE_V3_HEADER_CHECKS:BOOL=ON\n            -D RANGES_PREFER_REAL_CONCEPTS:BOOL=${cxx_concepts}\n            ${{ matrix.config.cmake_args }}\n            ${extra_cmake_args}\n          RESULT_VARIABLE result\n        )\n        if (NOT result EQUAL 0)\n          message(FATAL_ERROR \"Bad exit status\")\n        endif()\n\n    - name: Build\n      shell: cmake -P {0}\n      continue-on-error: ${{ matrix.config.experimental || false }}\n      run: |\n        set(ENV{NINJA_STATUS} \"[%f/%t %o/sec] \")\n\n        if (\"${{ runner.os }}\" STREQUAL \"Windows\" AND NOT \"x${{ matrix.config.environment_script }}\" STREQUAL \"x\")\n          file(STRINGS environment_script_output.txt output_lines)\n          foreach(line IN LISTS output_lines)\n            if (line MATCHES \"^([a-zA-Z0-9_-]+)=(.*)$\")\n              set(ENV{${CMAKE_MATCH_1}} \"${CMAKE_MATCH_2}\")\n            endif()\n          endforeach()\n        endif()\n\n        set(path_separator \":\")\n        if (\"${{ runner.os }}\" STREQUAL \"Windows\")\n          set(path_separator \";\")\n        endif()\n        set(ENV{PATH} \"$ENV{GITHUB_WORKSPACE}${path_separator}$ENV{PATH}\")\n\n        execute_process(\n          COMMAND ${{ steps.cmake_and_ninja.outputs.cmake_dir }}/cmake --build build\n          RESULT_VARIABLE result\n        )\n        if (NOT result EQUAL 0)\n          message(FATAL_ERROR \"Bad exit status\")\n        endif()\n\n    - name: Run tests\n      shell: cmake -P {0}\n      continue-on-error: ${{ matrix.config.experimental || false }}\n      run: |\n        include(ProcessorCount)\n        ProcessorCount(N)\n\n        set(ENV{CTEST_OUTPUT_ON_FAILURE} \"ON\")\n\n        execute_process(\n          COMMAND ${{ steps.cmake_and_ninja.outputs.cmake_dir }}/ctest --verbose -j ${N}\n          WORKING_DIRECTORY build\n          RESULT_VARIABLE result\n        )\n        if (NOT result EQUAL 0)\n          message(FATAL_ERROR \"Running tests failed!\")\n        endif()\n",
    "source": "MrE-Fog/range-v3",
    "path": ".github/workflows/range-v3-ci.yml",
    "url": "https://github.com/MrE-Fog/range-v3/blob/689b4f3da769fb21dd7acf62550a038242d832e5/.github/workflows/range-v3-ci.yml",
    "retrieved_at": "2025-08-14T12:50:13.870317Z"
  },
  {
    "question": "How does the `concurrency` group ensure only one workflow runs at a time for the same pull request or branch?",
    "answer": "name: trunk\n\non:\n  push:\n    branches:\n      - main\n      - release/*\n      - landchecks/*\n    tags:\n      - ciflow/trunk/*\n  workflow_dispatch:\n  schedule:\n    - cron: 29 8 * * *  # about 1:29am PDT\n\nconcurrency:\n  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}-${{ github.ref_type == 'branch' && github.sha }}-${{ github.event_name == 'workflow_dispatch' }}-${{ github.event_name == 'schedule' }}\n  cancel-in-progress: true\n\npermissions: read-all\n\njobs:\n  target-determination:\n    name: before-test\n    uses: ./.github/workflows/target_determination.yml\n    permissions:\n      id-token: write\n      contents: read\n\n  # Build PyTorch with BUILD_CAFFE2=ON\n  caffe2-linux-jammy-py3_8-gcc11-build:\n    name: caffe2-linux-jammy-py3.8-gcc11\n    uses: ./.github/workflows/_linux-build.yml\n    with:\n      build-environment: caffe2-linux-jammy-py3.8-gcc11\n      docker-image-name: pytorch-linux-jammy-py3.8-gcc11\n      test-matrix: |\n        { include: [\n          { config: \"default\", shard: 1, num_shards: 1 },\n        ]}\n\n  linux-focal-cuda12_1-py3_10-gcc9-build:\n    name: linux-focal-cuda12.1-py3.10-gcc9\n    uses: ./.github/workflows/_linux-build.yml\n    with:\n      build-environment: linux-focal-cuda12.1-py3.10-gcc9\n      docker-image-name: pytorch-linux-focal-cuda12.1-cudnn8-py3-gcc9\n      test-matrix: |\n        { include: [\n          { config: \"nogpu_AVX512\", shard: 1, num_shards: 1, runner: \"linux.2xlarge\" },\n          { config: \"nogpu_NO_AVX2\", shard: 1, num_shards: 1, runner: \"linux.2xlarge\" },\n          { config: \"jit_legacy\", shard: 1, num_shards: 1, runner: \"linux.4xlarge.nvidia.gpu\" },\n        ]}\n\n  linux-focal-cuda12_1-py3_10-gcc9-test:\n    name: linux-focal-cuda12.1-py3.10-gcc9\n    uses: ./.github/workflows/_linux-test.yml\n    needs:\n      - linux-focal-cuda12_1-py3_10-gcc9-build\n      - target-determination\n    with:\n      build-environment: linux-focal-cuda12.1-py3.10-gcc9\n      docker-image: ${{ needs.linux-focal-cuda12_1-py3_10-gcc9-build.outputs.docker-image }}\n      test-matrix: ${{ needs.linux-focal-cuda12_1-py3_10-gcc9-build.outputs.test-matrix }}\n\n  libtorch-linux-focal-cuda12_1-py3_7-gcc9-debug-build:\n    name: libtorch-linux-focal-cuda12.1-py3.7-gcc9-debug\n    uses: ./.github/workflows/_linux-build.yml\n    with:\n      build-environment: libtorch-linux-focal-cuda12.1-py3.7-gcc9\n      docker-image-name: pytorch-linux-focal-cuda12.1-cudnn8-py3-gcc9\n      build-generates-artifacts: false\n      runner: linux.4xlarge\n      test-matrix: |\n        { include: [\n          { config: \"default\", shard: 1, num_shards: 1 },\n        ]}\n\n  # no-ops builds test USE_PER_OPERATOR_HEADERS=0 where ATen/ops is not generated\n  linux-focal-cuda12_1-py3_10-gcc9-no-ops-build:\n    name: linux-focal-cuda12.1-py3.10-gcc9-no-ops\n    uses: ./.github/workflows/_linux-build.yml\n    with:\n      build-environment: linux-focal-cuda12.1-py3.10-gcc9-no-ops\n      docker-image-name: pytorch-linux-focal-cuda12.1-cudnn8-py3-gcc9\n      test-matrix: |\n        { include: [\n          { config: \"default\", shard: 1, num_shards: 1 },\n        ]}\n\n  pytorch-linux-focal-py3-clang9-android-ndk-r21e-build:\n    name: pytorch-linux-focal-py3-clang9-android-ndk-r21e-build\n    uses: ./.github/workflows/_android-full-build-test.yml\n    with:\n      build-environment: pytorch-linux-focal-py3-clang9-android-ndk-r21e-build\n      docker-image-name: pytorch-linux-focal-py3-clang9-android-ndk-r21e\n      test-matrix: |\n        { include: [\n          { config: \"default\", shard: 1, num_shards: 1, runner: \"linux.2xlarge\" },\n        ]}\n\n  macos-12-py3-arm64-build:\n    name: macos-12-py3-arm64\n    uses: ./.github/workflows/_mac-build.yml\n    with:\n      sync-tag: macos-12-py3-arm64-build\n      build-environment: macos-12-py3-arm64\n      runner-type: macos-m1-stable\n      build-generates-artifacts: true\n      # To match the one pre-installed in the m1 runners\n      python-version: 3.9.12\n      # We need to set the environment file here instead of trying to detect it automatically because\n      # MacOS arm64 is cross-compiled from x86-64. Specifically, it means that arm64 conda environment\n      # is needed when building PyTorch MacOS arm64 from x86-64\n      environment-file: .github/requirements/conda-env-macOS-ARM64\n      test-matrix: |\n        { include: [\n          { config: \"default\", shard: 1, num_shards: 3, runner: \"macos-m1-stable\" },\n          { config: \"default\", shard: 2, num_shards: 3, runner: \"macos-m1-stable\" },\n          { config: \"default\", shard: 3, num_shards: 3, runner: \"macos-m1-stable\" },\n        ]}\n\n  macos-12-py3-arm64-mps-test:\n    name: macos-12-py3-arm64-mps\n    uses: ./.github/workflows/_mac-test-mps.yml\n    needs: macos-12-py3-arm64-build\n    if: needs.macos-12-py3-arm64-build.outputs.build-outcome == 'success'\n    with:\n      sync-tag: macos-12-py3-arm64-mps-test\n      build-environment: macos-12-py3-arm64\n      # Same as the build job\n      python-version: 3.9.12\n      test-matrix: |\n        { include: [\n          { config: \"mps\", shard: 1, num_shards: 1, runner: \"macos-m1-stable\" },\n        ]}\n\n  macos-12-py3-arm64-test:\n    name: macos-12-py3-arm64\n    uses: ./.github/workflows/_mac-test.yml\n    needs:\n      - macos-12-py3-arm64-build\n      - target-determination\n    with:\n      build-environment: macos-12-py3-arm64\n      # Same as the build job\n      python-version: 3.9.12\n      test-matrix: ${{ needs.macos-12-py3-arm64-build.outputs.test-matrix }}\n      arch: arm64\n\n  win-vs2019-cpu-py3-build:\n    name: win-vs2019-cpu-py3\n    uses: ./.github/workflows/_win-build.yml\n    with:\n      build-environment: win-vs2019-cpu-py3\n      cuda-version: cpu\n      sync-tag: win-cpu-build\n      test-matrix: |\n        { include: [\n          { config: \"default\", shard: 1, num_shards: 3, runner: \"windows.4xlarge.nonephemeral\" },\n          { config: \"default\", shard: 2, num_shards: 3, runner: \"windows.4xlarge.nonephemeral\" },\n          { config: \"default\", shard: 3, num_shards: 3, runner: \"windows.4xlarge.nonephemeral\" },\n        ]}\n\n  win-vs2019-cpu-py3-test:\n    name: win-vs2019-cpu-py3\n    uses: ./.github/workflows/_win-test.yml\n    needs:\n      - win-vs2019-cpu-py3-build\n      - target-determination\n    with:\n      build-environment: win-vs2019-cpu-py3\n      cuda-version: cpu\n      test-matrix: ${{ needs.win-vs2019-cpu-py3-build.outputs.test-matrix }}\n\n  win-vs2019-cuda11_8-py3-build:\n    name: win-vs2019-cuda11.8-py3\n    uses: ./.github/workflows/_win-build.yml\n    with:\n      build-environment: win-vs2019-cuda11.8-py3\n      cuda-version: \"11.8\"\n      sync-tag: win-cuda-build\n      test-matrix: |\n        { include: [\n          { config: \"default\", shard: 1, num_shards: 6, runner: \"windows.g5.4xlarge.nvidia.gpu\" },\n          { config: \"default\", shard: 2, num_shards: 6, runner: \"windows.g5.4xlarge.nvidia.gpu\" },\n          { config: \"default\", shard: 3, num_shards: 6, runner: \"windows.g5.4xlarge.nvidia.gpu\" },\n          { config: \"default\", shard: 4, num_shards: 6, runner: \"windows.g5.4xlarge.nvidia.gpu\" },\n          { config: \"default\", shard: 5, num_shards: 6, runner: \"windows.g5.4xlarge.nvidia.gpu\" },\n          { config: \"default\", shard: 6, num_shards: 6, runner: \"windows.g5.4xlarge.nvidia.gpu\" },\n          { config: \"force_on_cpu\", shard: 1, num_shards: 1, runner: \"windows.4xlarge.nonephemeral\" },\n        ]}\n\n  linux-focal-rocm6_0-py3_8-build:\n    name: linux-focal-rocm6.0-py3.8\n    uses: ./.github/workflows/_linux-build.yml\n    with:\n      build-environment: linux-focal-rocm6.0-py3.8\n      docker-image-name: pytorch-linux-focal-rocm-n-py3\n      sync-tag: rocm-build\n      test-matrix: |\n        { include: [\n          { config: \"default\", shard: 1, num_shards: 1, runner: \"linux.rocm.gpu\" },\n        ]}\n\n  linux-focal-rocm6_0-py3_8-test:\n    permissions:\n      id-token: write\n      contents: read\n    name: linux-focal-rocm6.0-py3.8\n    uses: ./.github/workflows/_rocm-test.yml\n    needs:\n      - linux-focal-rocm6_0-py3_8-build\n      - target-determination\n    with:\n      build-environment: linux-focal-rocm6.0-py3.8\n      docker-image: ${{ needs.linux-focal-rocm6_0-py3_8-build.outputs.docker-image }}\n      test-matrix: ${{ needs.linux-focal-rocm6_0-py3_8-build.outputs.test-matrix }}\n      tests-to-include: \"test_nn test_torch test_cuda test_ops test_unary_ufuncs test_binary_ufuncs test_autograd inductor/test_torchinductor\"\n",
    "source": "zal-orz/pytorch",
    "path": ".github/workflows/trunk.yml",
    "url": "https://github.com/zal-orz/pytorch/blob/78b4793c965fe640e37d80530eb78f07d67492e8/.github/workflows/trunk.yml",
    "retrieved_at": "2025-08-14T12:50:14.763071Z"
  },
  {
    "question": "What specific files are linted by the workflow when a pull request is made?",
    "answer": "name: Lint\n\non:\n  pull_request:\n\nenv:\n  PYTHON_VERSION: \"3.8\"\n\ndefaults:\n  run:\n    shell: bash -l -eo pipefail {0}\n\njobs:\n  lint:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Check out repo\n        uses: actions/checkout@v3\n      - name: Setup python\n        uses: actions/setup-python@v4\n        with:\n          python-version: ${{ env.PYTHON_VERSION }}\n      - name: Update pip\n        run: python -m pip install --upgrade pip\n      - name: Install lint utilities\n        run: |\n          python -m pip install pre-commit\n          pre-commit install-hooks\n      - id: file_changes\n        uses: trilom/file-changes-action@v1.2.4\n        with:\n          prNumber: ${{ github.event.number }}\n          output: ' '\n      - name: Lint modified files\n        run: pre-commit run --files ${{ steps.file_changes.outputs.files }}\n  type_checking:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Check out repo\n        uses: actions/checkout@v3\n      - name: Setup conda env\n        uses: conda-incubator/setup-miniconda@v2\n        with:\n          auto-update-conda: true\n          miniconda-version: \"latest\"\n          activate-environment: lint\n          python-version: ${{ env.PYTHON_VERSION }}\n      - name: Install dependencies\n        run: |\n          conda install pytorch torchvision torchtext cpuonly -c pytorch-nightly\n          pip install -e \".[dev]\"\n      - name: Type check all files\n        run: python -m mypy --install-types --non-interactive --config-file mypy.ini\n",
    "source": "ravich3373/flava",
    "path": ".github/workflows/lint.yaml",
    "url": "https://github.com/ravich3373/flava/blob/8c0e16dd6b8b944ca718655d772850f27de1f4b8/.github/workflows/lint.yaml",
    "retrieved_at": "2025-08-14T12:51:44.555655Z"
  },
  {
    "question": "What CSS styling rules and conventions are enforced by this workflow?",
    "answer": "# @Author: Roni Laukkarinen\n# @Date:   2023-02-15 17:39:37\n# @Last Modified by:   Roni Laukkarinen\n# @Last Modified time: 2023-03-03 20:01:10\nname: CSS\n\non: [push, pull_request]\n\njobs:\n  build:\n    name: Test styles\n    runs-on: ubuntu-20.04\n\n    steps:\n    - name: Checkout the repository\n      uses: actions/checkout@v3\n\n    - name: Read .nvmrc\n      run: echo ::set-output name=NVMRC::$(cat .nvmrc)\n      id: nvm\n\n    - name: Setup node\n      uses: actions/setup-node@v1\n      with:\n        node-version: '${{ steps.nvm.outputs.NVMRC }}'\n\n    - name: Get package.json from devpackages\n      run: |\n        rm package.json\n        wget https://raw.githubusercontent.com/digitoimistodude/devpackages/master/package.json\n        sed -i 's/PROJECTNAME/air-light/g' package.json\n        npm install --global\n\n    - name: Install stylelint packages\n      run: |\n        npm install --global \\\n        postcss@^8.4.21 \\\n        postcss-scss@^4.0.6 \\\n        stylelint@^15.1.0 \\\n        stylelint-config-recommended@^10.0.1 \\\n        stylelint-config-recommended-scss@^9.0.0 \\\n        stylelint-config-standard@^30.0.1 \\\n        stylelint-config-standard-scss@^7.0.0 \\\n        stylelint-file-max-lines@^1.0.0 \\\n        stylelint-order@^6.0.2 \\\n        stylelint-rem-over-px@^0.0.4 \\\n        stylelint-scss@^4.4.0 \\\n        @ronilaukkarinen/stylelint-a11y@^1.2.7 \\\n        @ronilaukkarinen/stylelint-declaration-strict-value@^1.9.2 \\\n        @ronilaukkarinen/stylelint-value-no-unknown-custom-properties@^4.0.1\n\n    - name: Run stylelint\n      run: |\n        npx stylelint . --max-warnings 0 --config .stylelintrc\n",
    "source": "raikasdev/hydrogen-starter",
    "path": ".github/workflows/styles.yml",
    "url": "https://github.com/raikasdev/hydrogen-starter/blob/72d41cebb6124e1cb192c681fff61e6f7fd0eb96/.github/workflows/styles.yml",
    "retrieved_at": "2025-08-14T12:51:45.263631Z"
  },
  {
    "question": "What types of changes trigger this workflow to run?",
    "answer": "name: Linter\n\non: [push]\n\nenv:\n  NODE_VERSION: 20\n\njobs:\n  build:\n    name: JS & CSS & TS & D.TS\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # https://github.com/actions/checkout/releases/tag/v4.1.1\n\n      - name: Use Node.js ${{ env.NODE_VERSION }}\n        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # https://github.com/actions/setup-node/releases/tag/v4.0.2\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: |\n          npm ci --no-audit\n\n      - name: JavaScript lint\n        run: |\n          npm run lint\n\n      - name: CSS lint\n        run: |\n          npm run in handsontable stylelint\n",
    "source": "Slimua/handsontable",
    "path": ".github/workflows/linter.yml",
    "url": "https://github.com/Slimua/handsontable/blob/8595b3432cbe4ce05393661f225db5d68cac2bce/.github/workflows/linter.yml",
    "retrieved_at": "2025-08-14T12:51:45.956441Z"
  },
  {
    "question": "Under what conditions will the \"Build and publish\" job execute?",
    "answer": "name: Publish prerelease in NPM\n\non:\n  workflow_dispatch:\n  workflow_run:\n    workflows: [Tests]\n    types: [completed]\n    branches:\n      - 'develop'\n      - 'release/**'\n      - '!release/**-**'\n\nenv:\n  NODE_VERSION: 20\n\njobs:\n  build:\n    name: Build and publish\n    runs-on: ubuntu-latest\n    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}\n    steps:\n      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # https://github.com/actions/checkout/releases/tag/v4.1.1\n        with:\n          ref: ${{ github.event.workflow_run.head_branch }}\n\n      - name: Use Node.js ${{ env.NODE_VERSION }}\n        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # https://github.com/actions/setup-node/releases/tag/v4.0.2\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          registry-url: https://registry.npmjs.org/\n          cache: 'npm'\n        env:\n          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_AUTOMATION }}\n      - run: npm install\n      - run: npm run pre-release\n",
    "source": "Slimua/handsontable",
    "path": ".github/workflows/publish.yml",
    "url": "https://github.com/Slimua/handsontable/blob/8595b3432cbe4ce05393661f225db5d68cac2bce/.github/workflows/publish.yml",
    "retrieved_at": "2025-08-14T12:51:46.657106Z"
  },
  {
    "question": "What are the different build configurations and compiler versions used within the compatibility job matrix?",
    "answer": "name: Windows\n\non:\n  push:\n    paths-ignore:\n      - '**/*.md'\n  pull_request:\n    paths-ignore:\n      - '**/*.md'\n\njobs:\n  compatibility:\n    runs-on: windows-latest\n    strategy:\n      matrix:\n        VER: [v142, v143]\n        EXT: [ON, OFF]\n        GEN: [Visual Studio 17 2022]\n        BIN: [x64, x86]\n        STD: [99, 11, 17]\n        include:\n          - VER: v141\n            EXT: OFF\n            GEN: Ninja Multi-Config\n            BIN: x64\n            STD: 89 # /Za\n    env:\n      NINJA_URL: https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-win.zip\n      NINJA_ROOT: C:\\Tools\\Ninja\n      VS_ROOT: 'C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise'\n      UseMultiToolTask: true # Better parallel MSBuild execution\n\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Cache Ninja install\n      if: matrix.GEN == 'Ninja Multi-Config'\n      id: ninja-install\n      uses: actions/cache@v2\n      with:\n        path: |\n          C:\\Tools\\Ninja\n        key: ${{runner.os}}-ninja-${{env.NINJA_URL}}\n\n    - name: Install Ninja\n      if: matrix.GEN == 'Ninja Multi-Config' && steps.ninja-install.outputs.cache-hit != 'true'\n      shell: pwsh\n      run: |\n        Invoke-WebRequest ${env:NINJA_URL} -OutFile ~\\Downloads\\ninja-win.zip\n        Expand-Archive ~\\Downloads\\ninja-win.zip -DestinationPath ${env:NINJA_ROOT}\\\n        Remove-Item ~\\Downloads\\*\n\n    - name: Configure (MSBuild)\n      if: matrix.GEN == 'Visual Studio 17 2022'\n      shell: pwsh\n      run: |\n        $BIN = if('${{matrix.BIN}}' -eq 'x86') {'Win32'} else {'x64'}\n        $C_FLAGS = '/W4 /WX'\n        & cmake `\n          -G '${{matrix.GEN}}' `\n          -A $BIN `\n          -T ${{matrix.VER}} `\n          -D BUILD_TESTING=ON `\n          -D CMAKE_C_FLAGS=\"${C_FLAGS}\" `\n          -D CMAKE_C_EXTENSIONS='${{matrix.EXT}}' `\n          -S \"${env:GITHUB_WORKSPACE}\" `\n          -B \"${env:GITHUB_WORKSPACE}\\build\"\n\n    - name: Configure (Ninja Multi-Config)\n      if: matrix.GEN == 'Ninja Multi-Config'\n      shell: pwsh\n      run: |\n        $VER = switch ('${{matrix.VER}}') { `\n          'v141' {'14.1'} `\n          'v142' {'14.2'} `\n          'v143' {'14.3'} }\n        Import-Module \"${env:VS_ROOT}\\Common7\\Tools\\Microsoft.VisualStudio.DevShell.dll\"\n        Enter-VsDevShell -VsInstallPath ${env:VS_ROOT} -SkipAutomaticLocation -DevCmdArguments \"-host_arch=x64 -arch=${{matrix.BIN}} -vcvars_ver=${VER}\"\n        $C_FLAGS = '/W4 /WX'\n        & cmake `\n          -G '${{matrix.GEN}}' `\n          -D CMAKE_MAKE_PROGRAM=\"${env:NINJA_ROOT}\\ninja.exe\" `\n          -D BUILD_TESTING=ON `\n          -D CMAKE_C_FLAGS=\"${C_FLAGS}\" `\n          -D CMAKE_C_EXTENSIONS='${{matrix.EXT}}' `\n          -D CMAKE_EXE_LINKER_FLAGS='/INCREMENTAL' `\n          -S \"${env:GITHUB_WORKSPACE}\" `\n          -B \"${env:GITHUB_WORKSPACE}\\build\"\n\n    - name: Build (MSBuild)\n      if: matrix.GEN == 'Visual Studio 17 2022'\n      shell: pwsh\n      run: |\n        foreach ($Config in 'Release','Debug') { `\n          & cmake `\n            --build \"${env:GITHUB_WORKSPACE}\\build\" `\n            --config ${Config} `\n            -- `\n            /verbosity:minimal `\n            /maxCpuCount `\n            /noLogo\n        }\n\n    - name: Build (Ninja)\n      if: matrix.GEN == 'Ninja Multi-Config'\n      shell: pwsh\n      run: |\n        $VER = switch ('${{matrix.VER}}') { `\n          'v141' {'14.1'} `\n          'v142' {'14.2'} `\n          'v143' {'14.3'} }\n        Import-Module \"${env:VS_ROOT}\\Common7\\Tools\\Microsoft.VisualStudio.DevShell.dll\"\n        Enter-VsDevShell -VsInstallPath ${env:VS_ROOT} -SkipAutomaticLocation -DevCmdArguments \"-host_arch=x64 -arch=${{matrix.BIN}} -vcvars_ver=${VER}\"\n        foreach ($Config in 'Release','Debug') { `\n          & cmake `\n            --build \"${env:GITHUB_WORKSPACE}\\build\" `\n            --config ${Config} `\n            -- `\n            -j ${env:NUMBER_OF_PROCESSORS}\n        }\n\n    - name: Test\n      shell: pwsh\n      run: |\n        foreach ($Config in 'Release','Debug') { `\n          & ctest `\n            --test-dir \"${env:GITHUB_WORKSPACE}\\build\" `\n            --build-config ${Config} `\n            --output-on-failure `\n            --parallel ${env:NUMBER_OF_PROCESSORS}\n        }\n\n    - name: Install\n      shell: pwsh\n      run: |\n        & cmake `\n          --install \"${env:GITHUB_WORKSPACE}\\build\" `\n          --prefix \"${env:GITHUB_WORKSPACE}\\install\" `\n          --config Release\n\n    - name: Consume (PkgConfig - bare MSBuild)\n      if: matrix.GEN == 'Visual Studio 17 2022'\n      shell: pwsh\n      run: |\n        $BIN = if('${{matrix.BIN}}' -eq 'x86') {'Win32'} else {'x64'}\n        $C_FLAGS = '/W4 /WX'\n        & cmake `\n          -G '${{matrix.GEN}}' `\n          -A $BIN `\n          -T ${{matrix.VER}} `\n          -D CMAKE_C_FLAGS=\"${C_FLAGS}\" `\n          -D CMAKE_C_EXTENSIONS='${{matrix.EXT}}' `\n          -D CMAKE_PREFIX_PATH=\"${env:GITHUB_WORKSPACE}\\install\" `\n          -S \"${env:GITHUB_WORKSPACE}\\tests\\pkgconfig\\bare\" `\n          -B \"${env:GITHUB_WORKSPACE}\\downstream\\pkgconfig\\bare\"\n        foreach ($Config in 'Release','Debug') { `\n          & cmake `\n            --build \"${env:GITHUB_WORKSPACE}\\downstream\\pkgconfig\\bare\" `\n            --config ${Config} `\n            -- `\n            /verbosity:minimal `\n            /maxCpuCount `\n            /noLogo `\n        }\n\n    - name: Consume (PkgConfig - bare Ninja)\n      if: matrix.GEN == 'Ninja Multi-Config'\n      shell: pwsh\n      run: |\n        $VER = switch ('${{matrix.VER}}') { `\n          'v141' {'14.1'} `\n          'v142' {'14.2'} `\n          'v143' {'14.3'} }\n        Import-Module \"${env:VS_ROOT}\\Common7\\Tools\\Microsoft.VisualStudio.DevShell.dll\"\n        Enter-VsDevShell -VsInstallPath ${env:VS_ROOT} -SkipAutomaticLocation -DevCmdArguments \"-host_arch=x64 -arch=${{matrix.BIN}} -vcvars_ver=${VER}\"\n        $C_FLAGS = '/W4 /WX'\n        & cmake `\n          -G '${{matrix.GEN}}' `\n          -D CMAKE_MAKE_PROGRAM=\"${env:NINJA_ROOT}\\ninja.exe\" `\n          -D BUILD_TESTING=ON `\n          -D CMAKE_C_FLAGS=\"${C_FLAGS}\" `\n          -D CMAKE_C_EXTENSIONS='${{matrix.EXT}}' `\n          -D CMAKE_EXE_LINKER_FLAGS='/INCREMENTAL' `\n          -D CMAKE_PREFIX_PATH=\"${env:GITHUB_WORKSPACE}\\install\" `\n          -S \"${env:GITHUB_WORKSPACE}\\tests\\pkgconfig\\bare\" `\n          -B \"${env:GITHUB_WORKSPACE}\\downstream\\pkgconfig\\bare\"\n        foreach ($Config in 'Release','Debug') { `\n          & cmake `\n            --build \"${env:GITHUB_WORKSPACE}\\downstream\\pkgconfig\\bare\" `\n            --config ${Config} `\n            -- `\n            -j ${env:NUMBER_OF_PROCESSORS} `\n        }\n\n    - name: Consume (Emulate SDK presence)\n      shell: pwsh\n      run: |\n        New-Item -Type Directory -Path ${env:GITHUB_WORKSPACE}\\install\\share\\cmake\\OpenCL\n        New-Item -Type File -Path ${env:GITHUB_WORKSPACE}\\install\\share\\cmake\\OpenCL\\OpenCLConfig.cmake -Value 'include(\"${CMAKE_CURRENT_LIST_DIR}/../OpenCLHeaders/OpenCLHeadersTargets.cmake\")'\n\n    - name: Consume (PkgConfig - SDK MSBuild)\n      if: matrix.GEN == 'Visual Studio 17 2022'\n      shell: pwsh\n      run: |\n        $BIN = if('${{matrix.BIN}}' -eq 'x86') {'Win32'} else {'x64'}\n        $C_FLAGS = '/W4 /WX'\n        & cmake `\n          -G '${{matrix.GEN}}' `\n          -A $BIN `\n          -T ${{matrix.VER}} `\n          -D CMAKE_C_FLAGS=\"${C_FLAGS}\" `\n          -D CMAKE_C_EXTENSIONS='${{matrix.EXT}}' `\n          -D CMAKE_PREFIX_PATH=\"${env:GITHUB_WORKSPACE}\\install\" `\n          -S \"${env:GITHUB_WORKSPACE}\\tests\\pkgconfig\\sdk\" `\n          -B \"${env:GITHUB_WORKSPACE}\\downstream\\pkgconfig\\sdk\"\n        foreach ($Config in 'Release','Debug') { `\n          & cmake `\n            --build \"${env:GITHUB_WORKSPACE}\\downstream\\pkgconfig\\sdk\" `\n            --config ${Config} `\n            -- `\n            /verbosity:minimal `\n            /maxCpuCount `\n            /noLogo `\n        }\n\n    - name: Consume (PkgConfig - SDK Ninja)\n      if: matrix.GEN == 'Ninja Multi-Config'\n      shell: pwsh\n      run: |\n        $VER = switch ('${{matrix.VER}}') { `\n          'v141' {'14.1'} `\n          'v142' {'14.2'} `\n          'v143' {'14.3'} }\n        Import-Module \"${env:VS_ROOT}\\Common7\\Tools\\Microsoft.VisualStudio.DevShell.dll\"\n        Enter-VsDevShell -VsInstallPath ${env:VS_ROOT} -SkipAutomaticLocation -DevCmdArguments \"-host_arch=x64 -arch=${{matrix.BIN}} -vcvars_ver=${VER}\"\n        $C_FLAGS = '/W4 /WX'\n        & cmake `\n          -G '${{matrix.GEN}}' `\n          -D CMAKE_MAKE_PROGRAM=\"${env:NINJA_ROOT}\\ninja.exe\" `\n          -D BUILD_TESTING=ON `\n          -D CMAKE_C_FLAGS=\"${C_FLAGS}\" `\n          -D CMAKE_C_EXTENSIONS='${{matrix.EXT}}' `\n          -D CMAKE_EXE_LINKER_FLAGS='/INCREMENTAL' `\n          -D CMAKE_PREFIX_PATH=\"${env:GITHUB_WORKSPACE}\\install\" `\n          -S \"${env:GITHUB_WORKSPACE}\\tests\\pkgconfig\\sdk\" `\n          -B \"${env:GITHUB_WORKSPACE}\\downstream\\pkgconfig\\sdk\"\n        foreach ($Config in 'Release','Debug') { `\n          & cmake `\n            --build \"${env:GITHUB_WORKSPACE}\\downstream\\pkgconfig\\sdk\" `\n            --config ${Config} `\n            -- `\n            -j ${env:NUMBER_OF_PROCESSORS} `\n        }",
    "source": "msft-mirror-aosp/platform.external.OpenCL-Headers",
    "path": ".github/workflows/windows.yml",
    "url": "https://github.com/msft-mirror-aosp/platform.external.OpenCL-Headers/blob/dceb741b02c8788107db18f343b46d542406467a/.github/workflows/windows.yml",
    "retrieved_at": "2025-08-14T12:51:47.502862Z"
  },
  {
    "question": "Under what conditions does the `build-protocol` job automatically commit changes to the repository?",
    "answer": "name: Protocol\n\non:\n  pull_request:\n    types: [opened, synchronize, reopened, ready_for_review]\n    paths:\n      - \"packages/protocol/**\"\n      - \"!packages/protocol/contract_layout_*\"\n      - \"!packages/protocol/audit/**\"\n      - \"!packages/protocol/docs/**\"\n      - \"!packages/protocol/simulation/**\"\n      - \"!packages/protocol/deployments/**\"\n      - \"!packages/protocol/script/layer2/hekla/**\"\n      - \"!packages/protocol/script/layer2/mainnet/**\"\n      - \"!packages/protocol/script/layer1/hekla/**\"\n      - \"!packages/protocol/script/layer1/mainnet/**\"\n      - \"!packages/protocol/script/layer1/preconf/**\"\n      - \"!packages/protocol/script/layer1/provers/**\"\n      - \"!packages/protocol/script/layer1/team/**\"\n    branches-ignore:\n      - release-please--branches--**\n\nconcurrency:\n  group: ${{ github.workflow }}-${{ github.ref }}\n  cancel-in-progress: true\n\njobs:\n  build-protocol:\n    if: ${{ github.event.pull_request.draft == false  && !startsWith(github.head_ref, 'release-please') && github.actor != 'dependabot[bot]' }}\n    runs-on: [arc-runner-set]\n    permissions:\n      # Give the necessary permissions for stefanzweifel/git-auto-commit-action.\n      contents: write\n    steps:\n      - name: Cancel previous runs\n        uses: styfle/cancel-workflow-action@0.12.1\n        with:\n          access_token: ${{ github.token }}\n\n      - name: Prepare environment\n        continue-on-error: true\n        run: sudo apt-get update && sudo apt-get install -y git wget\n\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          submodules: recursive\n\n      - name: Install Foundry\n        uses: foundry-rs/foundry-toolchain@v1.2.0\n        with:\n          version: stable\n\n      - name: Install pnpm dependencies\n        uses: ./.github/actions/install-pnpm-dependencies\n\n      - name: Clean up and fmt\n        working-directory: ./packages/protocol\n        run: pnpm clean && forge fmt\n\n      - name: L2-Unit tests\n        working-directory: ./packages/protocol\n        run: pnpm compile:l2 && pnpm test:l2 && pnpm layout:l2\n\n      - name: L1-Unit tests\n        working-directory: ./packages/protocol\n        run: pnpm compile:l1 && pnpm snapshot:l1 && pnpm layout:l1\n\n      - name: Check for changes\n        id: git_status\n        run: |\n          git add -N .  # Simulate staging to detect untracked files\n          if [ -n \"$(git status --porcelain)\" ]; then\n            echo \"changes=true\" >> $GITHUB_ENV\n          else\n            echo \"changes=false\" >> $GITHUB_ENV\n          fi\n\n      - name: Commit contract layout table\n        if: env.changes == 'true'\n        uses: stefanzweifel/git-auto-commit-action@v5\n        with:\n          commit_message: \"forge fmt & update contract layout tables\"\n\n      - name: L1-Deploy contracts\n        working-directory: ./packages/protocol\n        timeout-minutes: 2\n        run: |\n          anvil --hardfork cancun &\n          until cast chain-id --rpc-url \"http://localhost:8545\" 2> /dev/null; do\n            sleep 1\n          done\n          pnpm test:deploy:l1\n\n  genesis-docker:\n    if: ${{ github.event.pull_request.draft == false  && !startsWith(github.head_ref, 'release-please') && github.actor != 'dependabot[bot]' }}\n    runs-on: [taiko-runner]\n    permissions:\n      # Give the necessary permissions for stefanzweifel/git-auto-commit-action.\n      contents: write\n    steps:\n      - name: Cancel previous runs\n        uses: styfle/cancel-workflow-action@0.12.1\n        with:\n          access_token: ${{ github.token }}\n\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          submodules: recursive\n\n      - name: Install Foundry\n        uses: foundry-rs/foundry-toolchain@v1.3.1\n\n      - name: Install pnpm dependencies\n        uses: ./.github/actions/install-pnpm-dependencies\n\n      - name: Compile\n        working-directory: ./packages/protocol\n        run: pnpm clean && pnpm compile\n\n      - name: L2-Generate Genesis (using docker)\n        working-directory: ./packages/protocol\n        run: pnpm genesis:test\n",
    "source": "NethermindEth/preconf-taiko-mono",
    "path": ".github/workflows/protocol.yml",
    "url": "https://github.com/NethermindEth/preconf-taiko-mono/blob/5ac7eda8202115e23bf76fd554c0a62b5aee765c/.github/workflows/protocol.yml",
    "retrieved_at": "2025-08-14T12:51:48.275454Z"
  },
  {
    "question": "What branches, besides `trying`, `trying.tmp`, `staging`, and `staging.tmp`, trigger this workflow?",
    "answer": "on:\n  push:\n    branches:\n      - '!trying'\n      - '!trying.tmp'\n      - '!staging'\n      - '!staging.tmp'\n\nname: Coverage\n\nenv:\n  RUST_BACKTRACE: 1\n  RUSTFLAGS: \"-Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off\"\n\njobs:\n  coverage:\n    name: Coverage\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Install Rust\n        uses: actions-rs/toolchain@v1\n        with:\n          profile: minimal\n          override: true\n      - name: Install LLVM (Linux)\n        run: |\n          curl --proto '=https' --tlsv1.2 -sSf https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz -L -o llvm.tar.xz\n          mkdir -p /opt/llvm-10\n          tar xf llvm.tar.xz --strip-components=1 -C /opt/llvm-10\n          echo '/opt/llvm-10/bin' >> $GITHUB_PATH\n          echo 'LLVM_SYS_100_PREFIX=/opt/llvm-10' >> $GITHUB_ENV\n      - name: Generate Coverage Report\n        run: |\n          cargo install cargo-tarpaulin\n          cargo tarpaulin --forward --release -t120 --out Xml --ignore-tests --workspace --exclude wasmer-wasi-experimental-io-devices --exclude wasmer-c-api -- --skip traps:: --skip spec::linking --test-threads=1\n      - name: Upload coverage to Codecov\n        uses: codecov/codecov-action@v1\n        with:\n          token: ${{ secrets.CODECOV_TOKEN }}\n          file: ./cobertura.xml\n",
    "source": "ailisp/near-wasmer",
    "path": ".github/workflows/coverage.yaml",
    "url": "https://github.com/ailisp/near-wasmer/blob/b75a0b651abd1b271142dc6ebc870b0090434972/.github/workflows/coverage.yaml",
    "retrieved_at": "2025-08-14T12:51:49.118560Z"
  },
  {
    "question": "Under what conditions will Dependabot pull requests be automatically merged by this workflow?",
    "answer": "name: Dependabot Auto Merge\n\non:\n  pull_request_target:\n\njobs:\n  auto-merge:\n    timeout-minutes: 5\n    runs-on: ubuntu-latest\n    if: github.actor == 'dependabot[bot]'\n    steps:\n      - uses: actions/checkout@v2\n      - uses: ahmadnassri/action-dependabot-auto-merge@v2\n        with:\n          target: minor\n          github-token: ${{ secrets.DEP_AUTOMERGE }}\n",
    "source": "ttttonyhe/ouorz-mono",
    "path": ".github/workflows/auto-merge.yml",
    "url": "https://github.com/ttttonyhe/ouorz-mono/blob/19ccccede781c71f3a3c5c4bbfc27368cc43be03/.github/workflows/auto-merge.yml",
    "retrieved_at": "2025-08-14T12:51:49.878293Z"
  },
  {
    "question": "Under what conditions will the code formatting check be executed?",
    "answer": "name: '🔎 Check Code Formatting'\n\non:\n  push:\n    branches:\n      - 'master'\n    paths:\n      - 'src/**'\n      - '!**/README.md'\n      - '!**.rst'\n\n  pull_request:\n    types:\n      - opened\n      - edited\n      - reopened\n      - synchronize\n    branches:\n      - 'master'\n\njobs:\n  formatting-check:\n    runs-on: ubuntu-20.04\n    steps:\n    - name: '⏳ Checkout repository'\n      uses: actions/checkout@v4\n      with:\n        submodules: false\n        persist-credentials: false\n\n    - name: '♻ Caching dependencies'\n      uses: actions/cache@v4.0.2\n      id: cache\n      with:\n        path: ~/cache/deps/bin\n        key: 'uncrustify'\n\n    - name: '🛠 Install dependencies'\n      if: steps.cache.outputs.cache-hit != 'true'\n      run: source tools/ci.sh && ci_install_code_format_deps\n\n    - name: '📜 Get list of changed files'\n      id: changed-files\n      uses: tj-actions/changed-files@v44\n      with:\n        files: |\n            src/**/*.c\n            src/**/*.h\n            !src/hal/**\n            !src/uvc/**\n            !src/lib/**\n            !src/drivers/**\n            !src/micropython/**\n            !src/stm32cubeai/**\n\n    - name: '📜 Show list of changed files'\n      run: |\n        echo \"${{ toJSON(steps.changed-files.outputs) }}\"\n      shell:\n        bash\n\n    - name: '🔎 Check code formatting'\n      if: steps.changed-files.outputs.any_changed == 'true'\n      run: |\n        source tools/ci.sh && ci_run_code_format_check ${{ steps.changed-files.outputs.all_changed_files }}\n",
    "source": "Omarsevenway/openmv-master",
    "path": ".github/workflows/codeformat.yml",
    "url": "https://github.com/Omarsevenway/openmv-master/blob/8e3c88119e4b813a2abceddcfb30370d9db5f36c/.github/workflows/codeformat.yml",
    "retrieved_at": "2025-08-14T12:51:50.622680Z"
  },
  {
    "question": "What specific benchmarks are run by the workflow, and how are their results stored and sent to Datadog?",
    "answer": "name: Haystack 1.x Benchmarks\n\non:\n  workflow_dispatch:\n\npermissions:\n  id-token: write\n  contents: read\n\nenv:\n  AWS_REGION: eu-central-1\n\njobs:\n  deploy-runner:\n    runs-on: ubuntu-latest\n    outputs:\n      cml_runner_id: ${{ steps.deploy.outputs.cml_runner_id }}\n    steps:\n      - uses: actions/checkout@v4\n\n      - uses: iterative/setup-cml@v3\n\n      - name: AWS authentication\n        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502\n        with:\n          aws-region: ${{ env.AWS_REGION }}\n          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}\n\n      - name: Launch EC2 instance and deploy runner\n        id: deploy\n        env:\n          repo_token: ${{ secrets.HAYSTACK_BOT_TOKEN }}\n        run: |\n          OUTPUT=$(cml runner launch \\\n          --cloud aws \\\n          --cloud-region ${{ env.AWS_REGION }} \\\n          --cloud-type=p3.2xlarge \\\n          --cloud-hdd-size=64 \\\n          --labels=cml 2>&1 | tee /dev/fd/2)\n          # Extract 'id' from the log and set it as an environment variable\n          ID_VALUE=$(echo \"$OUTPUT\" | jq -r '.message? | fromjson? | select(.id != null) | .id // empty')\n          echo \"cml_runner_id=$ID_VALUE\" >> \"$GITHUB_OUTPUT\"\n\n  run-reader-benchmarks:\n    needs: deploy-runner\n    runs-on: [self-hosted, cml]\n    container:\n      image: docker://iterativeai/cml:0-dvc2-base1-gpu\n      options: --gpus all\n    timeout-minutes: 2880\n\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          ref: v1.x\n\n      - name: Install Haystack + Datadog requirements\n        run: |\n          pip install .[metrics,benchmarks,inference]\n          pip install -r test/benchmarks/datadog/requirements.txt\n\n      - name: Run benchmarks\n        working-directory: test/benchmarks\n        run: |\n          mkdir +p out\n          for f in ./configs/reader/*.yml; do\n            name=\"${f%.*}\"\n            echo \"=== Running benchmarks for $name ===\";\n            config_name=\"$(basename \"$name\")\"\n            python run.py --output \"out/$config_name.json\" \"$f\";\n            echo \"=== Benchmarks done for $name (or failed) ===\";\n          done\n\n      - name: Send Benchmark results to Datadog\n        working-directory: test/benchmarks\n        run: |\n          python datadog/send_metrics.py out/ ${{ secrets.CORE_DATADOG_API_KEY }} https://api.datadoghq.eu\n\n      - name: Archive benchmark results\n        uses: actions/upload-artifact@v4\n        with:\n          name: benchmark-results-reader\n          path: test/benchmarks/out/\n\n  run-elasticsearch-benchmarks:\n    needs:\n      - deploy-runner\n      - run-reader-benchmarks\n    runs-on: [self-hosted, cml]\n    container:\n      image: docker://iterativeai/cml:0-dvc2-base1-gpu\n      options: --gpus all\n    services:\n      elasticsearch:\n        image: elasticsearch:7.17.6\n        env:\n          discovery.type: \"single-node\"\n        ports:\n          - 9201:9200\n    timeout-minutes: 2880\n\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          ref: v1.x\n\n      - name: Install Haystack + Datadog requirements\n        run: |\n          pip install .[metrics,elasticsearch,benchmarks,inference]\n          pip install -r test/benchmarks/datadog/requirements.txt\n\n      - name: Run benchmarks\n        working-directory: test/benchmarks\n        run: |\n          mkdir +p out\n          for f in ./configs/**/*-elasticsearch-*.yml; do\n            name=\"${f%.*}\"\n            echo \"=== Running benchmarks for $name ===\";\n            config_name=\"$(basename \"$name\")\"\n            python run.py --output \"out/$config_name.json\" \"$f\";\n            echo \"=== Benchmarks done for $name (or failed) ===\";\n          done\n\n      - name: Send Benchmark results to Datadog\n        working-directory: test/benchmarks\n        run: |\n          python datadog/send_metrics.py out/ ${{ secrets.CORE_DATADOG_API_KEY }} https://api.datadoghq.eu\n\n      - name: Archive benchmark results\n        uses: actions/upload-artifact@v4\n        with:\n          name: benchmark-results-elasticsearch\n          path: test/benchmarks/out/\n\n  run-weaviate-benchmarks:\n    needs:\n      - deploy-runner\n      - run-elasticsearch-benchmarks\n    runs-on: [self-hosted, cml]\n    container:\n      image: docker://iterativeai/cml:0-dvc2-base1-gpu\n      options: --gpus all\n    services:\n      weaviate:\n        image: semitechnologies/weaviate:1.17.2\n        env:\n          AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: \"true\"\n          PERSISTENCE_DATA_PATH: \"/var/lib/weaviate\"\n        ports:\n          - 8080:8080\n    timeout-minutes: 2880\n\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          ref: v1.x\n\n      - name: Install Haystack + Datadog requirements\n        run: |\n          pip install .[metrics,weaviate,benchmarks,inference]\n          pip install -r test/benchmarks/datadog/requirements.txt\n\n      - name: Run benchmarks\n        working-directory: test/benchmarks\n        run: |\n          mkdir +p out\n          for f in ./configs/**/*-weaviate-*.yml; do\n            name=\"${f%.*}\"\n            echo \"=== Running benchmarks for $name ===\";\n            config_name=\"$(basename \"$name\")\"\n            python run.py --output \"out/$config_name.json\" \"$f\";\n            echo \"=== Benchmarks done for $name (or failed) ===\";\n          done\n\n      - name: Send Benchmark results to Datadog\n        working-directory: test/benchmarks\n        run: |\n          python datadog/send_metrics.py out/ ${{ secrets.CORE_DATADOG_API_KEY }} https://api.datadoghq.eu\n\n      - name: Archive benchmark results\n        uses: actions/upload-artifact@v4\n        with:\n          name: benchmark-results-weaviate\n          path: test/benchmarks/out/\n\n  run-opensearch-benchmarks:\n    needs:\n      - deploy-runner\n      - run-weaviate-benchmarks\n    runs-on: [self-hosted, cml]\n    container:\n      image: docker://iterativeai/cml:0-dvc2-base1-gpu\n      options: --gpus all\n    services:\n      opensearch:\n        image: opensearchproject/opensearch:1.3.5\n        env:\n          discovery.type: \"single-node\"\n          OPENSEARCH_JAVA_OPTS: \"-Xms4096m -Xmx4096m\"\n        ports:\n          - 9200:9200\n    timeout-minutes: 2880\n\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          ref: v1.x\n\n      - name: Install Haystack + Datadog requirements\n        run: |\n          pip install .[metrics,opensearch,benchmarks,inference]\n          pip install -r test/benchmarks/datadog/requirements.txt\n\n      - name: Run benchmarks\n        working-directory: test/benchmarks\n        run: |\n          mkdir +p out\n          for f in ./configs/**/*-opensearch-*.yml; do\n            name=\"${f%.*}\"\n            echo \"=== Running benchmarks for $name ===\";\n            config_name=\"$(basename \"$name\")\"\n            python run.py --output \"out/$config_name.json\" \"$f\";\n            echo \"=== Benchmarks done for $name (or failed) ===\";\n          done\n\n      - name: Send Benchmark results to Datadog\n        working-directory: test/benchmarks\n        run: |\n          python datadog/send_metrics.py out/ ${{ secrets.CORE_DATADOG_API_KEY }} https://api.datadoghq.eu\n\n      - name: Archive benchmark results\n        uses: actions/upload-artifact@v4\n        with:\n          name: benchmark-results-opensearch\n          path: test/benchmarks/out/\n\n  terminate-runner:\n    if: always()\n    needs:\n      - deploy-runner\n      - run-opensearch-benchmarks\n    runs-on: ubuntu-latest\n    steps:\n      - name: AWS authentication\n        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502\n        with:\n          aws-region: ${{ env.AWS_REGION }}\n          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}\n\n      - name: Terminate EC2 instance\n        env:\n          CML_RUNNER_ID: ${{needs.deploy-runner.outputs.cml_runner_id}}\n        run: |\n          # Get the instance ID using its Name tag and terminate the instance\n          INSTANCE_ID=$(aws ec2 describe-instances --filters \"Name=tag:Name,Values=${{ env.CML_RUNNER_ID }}\" --query \"Reservations[*].Instances[*].[InstanceId]\" --output text)\n          aws ec2 terminate-instances --instance-ids \"$INSTANCE_ID\"\n",
    "source": "SAKTHICPT/deepset-ai-haystack",
    "path": ".github/workflows/benchmarks.yml",
    "url": "https://github.com/SAKTHICPT/deepset-ai-haystack/blob/9e18c822e07f2038397aabeff9a176aa69995f4b/.github/workflows/benchmarks.yml",
    "retrieved_at": "2025-08-14T12:51:51.333091Z"
  }
]